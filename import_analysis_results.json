{
  "total_files": 409,
  "success_count": 160,
  "failure_count": 249,
  "success_files": [
    ".claude/hooks/claude-md-checker.py",
    ".claude/implementations/analyze-repo-demo.py",
    ".claude/implementations/analyze-repo-standalone.py",
    ".claude/implementations/analyze-repo.py",
    "agents/orchestration/__init__.py",
    "agents/orchestration/delegation_engine.py",
    "agents/orchestration/models.py",
    "agents/r1_reasoning/__init__.py",
    "agents/r1_reasoning/config.py",
    "agents/r1_reasoning/models.py",
    "agents/specialized/__init__.py",
    "agents/specialized/github_agent.py",
    "agents/specialized/jina_search_agent.py",
    "agents/specialized/slack_agent.py",
    "agents/tech_expert/__init__.py",
    "agents/tech_expert/conversation_engine.py",
    "agents/tech_expert/models.py",
    "agents/tool-selection/models.py",
    "api/__init__.py",
    "api/r1_reasoning_server.py",
    "brain/__init__.py",
    "brain/docs/auto-sync-graph.py",
    "brain/logs/archives/superclaude-v2-backup-20250715/test-superclaude/test_integration.py",
    "brain/modules/__init__.py",
    "brain/modules/analyze_command_handler.py",
    "brain/modules/analyze_orchestrator.py",
    "brain/modules/anthropic-docs-integration.py",
    "brain/modules/example-feedback-scorer.py",
    "brain/modules/example-recommendation-engine.py",
    "brain/modules/integration-aware-prp-enhancer.py",
    "brain/modules/mcp_orchestrator.py",
    "brain/modules/memory-quality-scorer.py",
    "brain/modules/prp-docs-pipeline.py",
    "brain/modules/prp-example-generator.py",
    "brain/modules/prp-scaffold.py",
    "brain/modules/research-prp-integration.py",
    "brain/modules/run_analyze.py",
    "brain/modules/sop-generator.py",
    "brain/modules/summary-extractor.py",
    "brain/modules/tech_stack_expert.py",
    "brain/modules/test-analyze-implementation.py",
    "brain/modules/unified-analytics.py",
    "brain/modules/unified-task-manager.py",
    "core/cache_manager.py",
    "core/enhanced_command_processor.py",
    "core/resource_optimization_manager.py",
    "core/unified_enhancement_coordinator.py",
    "enhancements/memory/__init__.py",
    "enhancements/memory/config.py",
    "examples/generated/from-tasks/EXAMPLE_multi_agent_prp-structure-template.py",
    "examples/generated/from-tasks/ai-powered-crm-system-structure-template.py",
    "fixes/critical_import_fixes.py",
    "fixes/syntax_fixes.py",
    "github-analyzer-legacy/tools/command_similarity_analyzer.py",
    "github-analyzer-legacy/tools/enhanced_analyzer.py",
    "github-analyzer-legacy/tools/quick_analyzer.py",
    "ideas/research-trigger.py",
    "import_analysis_test.py",
    "inference/__init__.py",
    "inference/huggingface_client.py",
    "inference/model_router.py",
    "inference/ollama_client.py",
    "ingestion/r1_reasoning/__init__.py",
    "ingestion/r1_reasoning/jina_research_ingester.py",
    "ingestion/r1_reasoning/pdf_processor.py",
    "ingestion/r1_reasoning/semantic_chunker.py",
    "interfaces/__init__.py",
    "interfaces/r1_reasoning_interface.py",
    "mcp/__init__.py",
    "mcp/health_monitor.py",
    "mcp/server_manager.py",
    "n8n/tech_expert_workflow.py",
    "ottomator-agents/agentic-rag-knowledge-graph/agent/__init__.py",
    "ottomator-agents/agentic-rag-knowledge-graph/agent/models.py",
    "ottomator-agents/agentic-rag-knowledge-graph/agent/prompts.py",
    "ottomator-agents/agentic-rag-knowledge-graph/cli.py",
    "ottomator-agents/agentic-rag-knowledge-graph/ingestion/__init__.py",
    "ottomator-agents/agentic-rag-knowledge-graph/tests/__init__.py",
    "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/__init__.py",
    "ottomator-agents/agentic-rag-knowledge-graph/tests/conftest.py",
    "ottomator-agents/agentic-rag-knowledge-graph/tests/ingestion/__init__.py",
    "ottomator-agents/foundational-rag-agent/agent/prompts.py",
    "ottomator-agents/foundational-rag-agent/database/aai_supabase_client.py",
    "ottomator-agents/foundational-rag-agent/document_processing/chunker.py",
    "ottomator-agents/foundational-rag-agent/tests/test_chunker.py",
    "ottomator-agents/genericsuite-app-maker-agent/__init__.py",
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/__init__.py",
    "ottomator-agents/genericsuite-app-maker-agent/lib/__init__.py",
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_abstracts_constants.py",
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_app_ideation_lib.py",
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_utilities.py",
    "ottomator-agents/genericsuite-app-maker-agent/src/__init__.py",
    "ottomator-agents/google-a2a-agent/client.py",
    "ottomator-agents/streambuzz-agent/constants/enums.py",
    "ottomator-agents/streambuzz-agent/constants/prompts.py",
    "ottomator-agents/streambuzz-agent/exceptions/user_error.py",
    "ottomator-agents/streambuzz-agent/logger.py",
    "ottomator-agents/streambuzz-agent/models/agent_models.py",
    "ottomator-agents/streambuzz-agent/routers/__init__.py",
    "ottomator-agents/thirdbrain-mcp-openai-agent/exceptions.py",
    "projects/enhanced-repository-analyzer/__init__.py",
    "projects/enhanced-repository-analyzer/agents/base_agent.py",
    "projects/enhanced-repository-analyzer/core/__init__.py",
    "projects/enhanced-repository-analyzer/core/cache_manager.py",
    "projects/enhanced-repository-analyzer/core/pattern_registry.py",
    "projects/enhanced-repository-analyzer/core/semantic_analyzer.py",
    "projects/enhanced-repository-analyzer/core/streaming_walker.py",
    "projects/enhanced-repository-analyzer/tests/__init__.py",
    "projects/enhanced-repository-analyzer/tests/conftest.py",
    "projects/legacy-github-analyzer/analyzer_agents.py",
    "projects/legacy-github-analyzer/integration_stubs.py",
    "projects/legacy-github-analyzer/simplified_analyzer_test.py",
    "projects/test-superclaude/test_integration.py",
    "projects/test-superclaude-v3-integration/test_v3_integration.py",
    "research/_map/openrouter-integration.py",
    "research/_map/pattern-detector.py",
    "research/_semantic/semantic_search.py",
    "research/scripts/archive-project.py",
    "research/scripts/jina-integration-example.py",
    "research/scripts/jina-optimized-config.py",
    "research/scripts/neovim-dashboard-research.py",
    "research/scripts/pdf-reading-research.py",
    "research/scripts/test-jina-scraping.py",
    "scripts/anthropic_docs_scraper.py",
    "scripts/test_readiness_demo.py",
    "scripts/validate_prp_readiness.py",
    "supabase/modules/supabase_auto_offload.py",
    "supabase/modules/supabase_migration.py",
    "supabase/modules/supabase_search.py",
    "supabase/scripts/connection_diagnostics.py",
    "supabase/scripts/manual_upload_sql.py",
    "supabase/scripts/setup_embeddings.py",
    "supabase/scripts/test_connection_with_fallback.py",
    "supabase/scripts/upload_migration_data.py",
    "supabase/scripts/verify_upload.py",
    "superclaude-v3/SuperClaude/Hooks/PLACEHOLDER.py",
    "superclaude-v3/SuperClaude.py",
    "superclaude-v3/setup/__init__.py",
    "superclaude-v3/setup/base/__init__.py",
    "superclaude-v3/setup/base/component.py",
    "superclaude-v3/setup/core/config_manager.py",
    "superclaude-v3/setup/core/file_manager.py",
    "superclaude-v3/setup/core/settings_manager.py",
    "superclaude-v3/setup/core/validator.py",
    "superclaude-v3/setup/operations/__init__.py",
    "superclaude-v3/setup/utils/__init__.py",
    "superclaude-v3/setup/utils/security.py",
    "superclaude-v3/setup/utils/ui.py",
    "test_r1_reasoning.py",
    "tests/comprehensive_module_test.py",
    "tests/comprehensive_module_tester.py",
    "tests/enhancements/memory/test_memory_integration.py",
    "tests/quick_import_test.py",
    "tests/test_improvements_validation.py",
    "tests/test_simple_validation.py",
    "tests/test_unified_enhancement_integration.py",
    "vector_store/__init__.py",
    "vector_store/chroma_manager.py",
    "vector_store/retrieval_ranker.py",
    "vector_store/supabase_vector_store.py"
  ],
  "failed_imports": {
    "agents/orchestration/primary_agent.py": {
      "file": "agents/orchestration/primary_agent.py",
      "success": false,
      "error": "No module named 'agents.orchestration.models.models'; 'agents.orchestration.models' is not a package",
      "error_type": "import_error",
      "imports": [
        "logging",
        "asyncio",
        "uuid",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Union",
        "datetime.datetime",
        "mcp.server_manager.MCPServerManager",
        "mcp.health_monitor.MCPHealthMonitor",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.Model",
        "models.DelegationRequest",
        "models.DelegationResponse",
        "models.OrchestrationResult",
        "models.TaskResult",
        "models.AgentSpecialization",
        "models.TaskDelegation",
        "models.SystemStatus",
        "models.OrchestrationMetrics",
        "delegation_engine.DelegationEngine",
        "agents.orchestration.models.models.DelegationRequest",
        "agents.orchestration.models.models.DelegationResponse",
        "agents.orchestration.models.models.OrchestrationResult",
        "agents.orchestration.models.models.TaskResult",
        "agents.orchestration.models.models.AgentSpecialization",
        "agents.orchestration.models.models.TaskDelegation",
        "agents.orchestration.models.models.SystemStatus",
        "agents.orchestration.models.models.OrchestrationMetrics",
        "agents.orchestration.delegation_engine.DelegationEngine",
        "agents.specialized.slack_agent.SlackAgent",
        "agents.specialized.github_agent.GitHubAgent",
        "agents.specialized.filesystem_agent.FilesystemAgent",
        "agents.specialized.jina_search_agent.JinaSearchAgent"
      ]
    },
    "agents/r1_reasoning/confidence_scorer.py": {
      "file": "agents/r1_reasoning/confidence_scorer.py",
      "success": false,
      "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package",
      "error_type": "import_error",
      "imports": [
        "re",
        "math",
        "logging",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "models.ReasoningStep",
        "models.ReasoningChain",
        "models.ConfidenceAnalysis",
        "models.AlternativePerspective",
        "models.VectorSearchResult",
        "config.R1ReasoningConfig",
        "agents.r1_reasoning.models.models.ReasoningStep",
        "agents.r1_reasoning.models.models.ReasoningChain",
        "agents.r1_reasoning.models.models.ConfidenceAnalysis",
        "agents.r1_reasoning.models.models.AlternativePerspective",
        "agents.r1_reasoning.models.models.VectorSearchResult",
        "agents.r1_reasoning.config.R1ReasoningConfig"
      ]
    },
    "agents/r1_reasoning/dual_model_agent.py": {
      "file": "agents/r1_reasoning/dual_model_agent.py",
      "success": false,
      "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package",
      "error_type": "import_error",
      "imports": [
        "logging",
        "asyncio",
        "uuid",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Union",
        "typing.Callable",
        "datetime.datetime",
        "dataclasses.dataclass",
        "smolagents.CodeAgent",
        "smolagents.ToolCallingAgent",
        "smolagents.Tool",
        "smolagents.HfApiModel",
        "smolagents.agents.MultiStepAgent",
        "models.ReasoningChain",
        "models.ReasoningStep",
        "models.DocumentAnalysisRequest",
        "models.ReasoningResponse",
        "models.ConfidenceAnalysis",
        "models.ModelInferenceConfig",
        "models.ReasoningDepth",
        "models.ReasoningMethod",
        "reasoning_engine.ReasoningEngine",
        "confidence_scorer.ConfidenceScorer",
        "inference.model_router.ModelRouter",
        "vector_store.SupabaseVectorStore",
        "vector_store.ChromaManager",
        "vector_store.RetrievalRanker",
        "agents.r1_reasoning.models.models.ReasoningChain",
        "agents.r1_reasoning.models.models.ReasoningStep",
        "agents.r1_reasoning.models.models.DocumentAnalysisRequest",
        "agents.r1_reasoning.models.models.ReasoningResponse",
        "agents.r1_reasoning.models.models.ConfidenceAnalysis",
        "agents.r1_reasoning.models.models.ModelInferenceConfig",
        "agents.r1_reasoning.models.models.ReasoningDepth",
        "agents.r1_reasoning.models.models.ReasoningMethod",
        "agents.r1_reasoning.reasoning_engine.ReasoningEngine",
        "agents.r1_reasoning.confidence_scorer.ConfidenceScorer",
        "vector_store.VectorSearchRequest",
        "agents.r1_reasoning.models.SupportingDocument"
      ]
    },
    "agents/r1_reasoning/reasoning_engine.py": {
      "file": "agents/r1_reasoning/reasoning_engine.py",
      "success": false,
      "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "time",
        "uuid",
        "re",
        "logging"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "inference.model_router.ModelRouter",
        "inference.model_router.InferenceRequest",
        "models.ReasoningStep",
        "models.ReasoningChain",
        "models.ReasoningMethod",
        "models.ReasoningDepth",
        "models.ConfidenceAnalysis",
        "models.AlternativePerspective",
        "models.ReasoningLimitation",
        "models.DocumentAnalysisRequest",
        "models.ReasoningResponse",
        "config.R1ReasoningConfig",
        "agents.r1_reasoning.models.models.ReasoningStep",
        "agents.r1_reasoning.models.models.ReasoningChain",
        "agents.r1_reasoning.models.models.ReasoningMethod",
        "agents.r1_reasoning.models.models.ReasoningDepth",
        "agents.r1_reasoning.models.models.ConfidenceAnalysis",
        "agents.r1_reasoning.models.models.AlternativePerspective",
        "agents.r1_reasoning.models.models.ReasoningLimitation",
        "agents.r1_reasoning.models.models.DocumentAnalysisRequest",
        "agents.r1_reasoning.models.models.ReasoningResponse",
        "agents.r1_reasoning.config.R1ReasoningConfig"
      ]
    },
    "agents/specialized/filesystem_agent.py": {
      "file": "agents/specialized/filesystem_agent.py",
      "success": false,
      "error": "No module named 'aiofiles'",
      "error_type": "import_error",
      "imports": [
        "logging",
        "asyncio",
        "os",
        "shutil",
        "json",
        "aiofiles",
        "mimetypes",
        "asyncio",
        "re",
        "re",
        "re"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "datetime.datetime",
        "pathlib.Path"
      ]
    },
    "agents/tech_expert/recommender.py": {
      "file": "agents/tech_expert/recommender.py",
      "success": false,
      "error": "No module named 'agents.tech_expert.models.models'; 'agents.tech_expert.models' is not a package",
      "error_type": "import_error",
      "imports": [
        "logging",
        "asyncio",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "functools.lru_cache",
        "models.ProjectRequirements",
        "models.TechRecommendation",
        "models.TechStackRecommendationSet",
        "models.ApplicationType",
        "models.UserScale",
        "models.ExperienceLevel",
        "models.TechCategory",
        "agents.tech_expert.models.models.ProjectRequirements",
        "agents.tech_expert.models.models.TechRecommendation",
        "agents.tech_expert.models.models.TechStackRecommendationSet",
        "agents.tech_expert.models.models.ApplicationType",
        "agents.tech_expert.models.models.UserScale",
        "agents.tech_expert.models.models.ExperienceLevel",
        "agents.tech_expert.models.models.TechCategory",
        "models.EXAMPLE_PROJECT_REQUIREMENTS",
        "agents.tech_expert.models.EXAMPLE_PROJECT_REQUIREMENTS"
      ]
    },
    "agents/tool-selection/__init__.py": {
      "file": "agents/tool-selection/__init__.py",
      "success": false,
      "error": "expected an indented block after 'try' statement on line 294 (tool_selector.py, line 295)",
      "error_type": "other_error",
      "imports": [],
      "from_imports": [
        "prompt_analyzer.PromptAnalyzer",
        "prompt_analyzer.PromptContext",
        "tool_selector.ToolSelector",
        "tool_selector.ToolSelection",
        "fabric_integrator.FabricIntegrator",
        "fabric_integrator.FabricPattern",
        "confidence_scorer.SelectionConfidenceScorer",
        "learning_engine.SelectionLearningEngine"
      ]
    },
    "agents/tool-selection/confidence_scorer.py": {
      "file": "agents/tool-selection/confidence_scorer.py",
      "success": false,
      "error": "expected an indented block after 'try' statement on line 439 (<unknown>, line 440)",
      "error_type": "syntax_error",
      "imports": [],
      "from_imports": []
    },
    "agents/tool-selection/fabric_integrator.py": {
      "file": "agents/tool-selection/fabric_integrator.py",
      "success": false,
      "error": "No module named 'aiofiles'",
      "error_type": "import_error",
      "imports": [
        "os",
        "logging",
        "json",
        "aiofiles",
        "aiohttp",
        "asyncio",
        "requests",
        "requests"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "pathlib.Path",
        "datetime.datetime",
        "models.FabricPattern",
        "models.PromptContext",
        "models.ToolCategory",
        "agents.tool_selection.models.FabricPattern",
        "agents.tool_selection.models.PromptContext",
        "agents.tool_selection.models.ToolCategory"
      ]
    },
    "agents/tool-selection/learning_engine.py": {
      "file": "agents/tool-selection/learning_engine.py",
      "success": false,
      "error": "No module named 'agents.tool_selection'",
      "error_type": "import_error",
      "imports": [
        "logging",
        "json",
        "asyncio",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timedelta",
        "pathlib.Path",
        "models.PromptContext",
        "models.FabricPattern",
        "models.ToolMetadata",
        "models.ContextAnalysis",
        "models.ToolSelection",
        "models.SelectionResult",
        "models.LearningRecord",
        "models.SelectionMetrics",
        "agents.tool_selection.models.models.PromptContext",
        "agents.tool_selection.models.models.FabricPattern",
        "agents.tool_selection.models.models.ToolMetadata",
        "agents.tool_selection.models.models.ContextAnalysis",
        "agents.tool_selection.models.models.ToolSelection",
        "agents.tool_selection.models.models.SelectionResult",
        "agents.tool_selection.models.models.LearningRecord",
        "agents.tool_selection.models.models.SelectionMetrics",
        "models.ContextAnalysis",
        "models.ToolSelection",
        "models.SelectionResult",
        "models.PromptContext",
        "agents.tool_selection.models.ContextAnalysis",
        "agents.tool_selection.models.ToolSelection",
        "agents.tool_selection.models.SelectionResult",
        "agents.tool_selection.models.PromptContext"
      ]
    },
    "agents/tool-selection/prompt_analyzer.py": {
      "file": "agents/tool-selection/prompt_analyzer.py",
      "success": false,
      "error": "No module named 'agents.tool_selection'",
      "error_type": "import_error",
      "imports": [
        "re",
        "logging",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "models.PromptContext",
        "models.ContextAnalysis",
        "agents.tool_selection.models.PromptContext",
        "agents.tool_selection.models.ContextAnalysis"
      ]
    },
    "agents/tool-selection/tool_selector.py": {
      "file": "agents/tool-selection/tool_selector.py",
      "success": false,
      "error": "expected an indented block after 'try' statement on line 294 (<unknown>, line 295)",
      "error_type": "syntax_error",
      "imports": [],
      "from_imports": []
    },
    "brain/modules/dashboard-visualizer.py": {
      "file": "brain/modules/dashboard-visualizer.py",
      "success": false,
      "error": "No module named 'matplotlib'",
      "error_type": "import_error",
      "imports": [
        "json",
        "matplotlib.pyplot",
        "matplotlib.patches",
        "numpy",
        "os"
      ],
      "from_imports": [
        "matplotlib.patches.Circle",
        "matplotlib.patches.Wedge",
        "matplotlib.patches.Rectangle",
        "datetime.datetime"
      ]
    },
    "brain/modules/enhanced-repository-analyzer.py": {
      "file": "brain/modules/enhanced-repository-analyzer.py",
      "success": false,
      "error": "No module named 'agents.structure_agent'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "logging",
        "sqlite3",
        "time",
        "sys"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "core.cache_manager.CacheManager",
        "core.pattern_registry.PatternRegistry",
        "core.semantic_analyzer.SemanticAnalyzer",
        "core.streaming_walker.StreamingFileWalker",
        "agents.structure_agent.StructureAgent",
        "integrations.openrouter_integration.OpenRouterIntegration",
        "brain.modules.unified_analytics.UnifiedAnalytics",
        "brain.modules.integration_aware_prp_enhancer.IntegrationAwarePRPEnhancer"
      ]
    },
    "brain/modules/github-analyzer.py": {
      "file": "brain/modules/github-analyzer.py",
      "success": false,
      "error": "No module named 'docker'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "ast",
        "json",
        "logging",
        "os",
        "shlex",
        "shutil",
        "subprocess",
        "tempfile",
        "time",
        "hashlib",
        "sqlite3",
        "docker",
        "git",
        "tree_sitter",
        "requests",
        "bandit"
      ],
      "from_imports": [
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "datetime.datetime",
        "datetime.timezone",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "typing.Any",
        "git.Repo",
        "tree_sitter.Language",
        "tree_sitter.Parser",
        "brain.modules.analyze_orchestrator.AnalyzeOrchestrator",
        "brain.modules.analyze_orchestrator.AnalysisTask",
        "brain.modules.integration_aware_prp_enhancer.IntegrationAwarePRPEnhancer",
        "brain.modules.research_prp_integration.ResearchPRPIntegration",
        "brain.modules.unified_analytics.UnifiedAnalytics"
      ]
    },
    "brain/modules/openrouter/__init__.py": {
      "file": "brain/modules/openrouter/__init__.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "router_client.OpenRouterClient",
        "router_client.get_openrouter_client",
        "embeddings.EmbeddingsEngine",
        "embeddings.find_similar_patterns",
        "embeddings.cache_current_intent",
        "embeddings.get_intent_recommendation",
        "contradictions.ContradictionEngine",
        "contradictions.check_for_contradictions",
        "contradictions.analyze_conversation_conflicts",
        "contradictions.validate_decision_consistency"
      ]
    },
    "brain/modules/openrouter/contradictions.py": {
      "file": "brain/modules/openrouter/contradictions.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "json",
        "asyncio"
      ],
      "from_imports": [
        "datetime.datetime",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple",
        "router_client.get_openrouter_client",
        "supabase_cache.SupabaseCache"
      ]
    },
    "brain/modules/openrouter/embeddings.py": {
      "file": "brain/modules/openrouter/embeddings.py",
      "success": false,
      "error": "No module named 'numpy'",
      "error_type": "import_error",
      "imports": [
        "json",
        "asyncio",
        "numpy"
      ],
      "from_imports": [
        "datetime.datetime",
        "typing.List",
        "typing.Dict",
        "typing.Tuple",
        "typing.Optional",
        "router_client.get_openrouter_client",
        "supabase_cache.SupabaseCache",
        "supabase_cache.cache_intent_pattern"
      ]
    },
    "brain/modules/openrouter/router_client.py": {
      "file": "brain/modules/openrouter/router_client.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "time",
        "json",
        "asyncio",
        "aiohttp"
      ],
      "from_imports": [
        "datetime.datetime",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "dotenv.load_dotenv"
      ]
    },
    "brain/modules/seamless-orchestrator.py": {
      "file": "brain/modules/seamless-orchestrator.py",
      "success": false,
      "error": "No module named 'brain.modules.unified_analytics'",
      "error_type": "import_error",
      "imports": [
        "json",
        "os",
        "subprocess",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Any",
        "datetime.datetime",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "brain.modules.unified_analytics.UnifiedAnalytics",
        "brain.modules.research_prp_integration.ResearchPRPIntegration",
        "brain.modules.integration_aware_prp_enhancer.IntegrationAwarePRPEnhancer",
        "brain.modules.prp_scaffold.PRPScaffolder"
      ]
    },
    "brain/modules/smart-tool-selector.py": {
      "file": "brain/modules/smart-tool-selector.py",
      "success": false,
      "error": "no running event loop",
      "error_type": "other_error",
      "imports": [
        "logging",
        "asyncio",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "datetime.datetime",
        "brain.core.module.BrainModule",
        "brain.core.confidence.AAIConfidenceScorer",
        "agents.tool_selection.prompt_analyzer.PromptAnalyzer",
        "agents.tool_selection.fabric_integrator.FabricIntegrator",
        "agents.tool_selection.tool_selector.ToolSelector",
        "agents.tool_selection.confidence_scorer.SelectionConfidenceScorer",
        "agents.tool_selection.learning_engine.SelectionLearningEngine",
        "agents.tool_selection.models.SelectionRequest",
        "agents.tool_selection.models.PromptContext"
      ]
    },
    "brain/modules/supabase-cache.py": {
      "file": "brain/modules/supabase-cache.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "uuid"
      ],
      "from_imports": [
        "datetime.datetime",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "supabase.create_client",
        "supabase.Client",
        "dotenv.load_dotenv"
      ]
    },
    "brain/modules/unified_enhancement_loader.py": {
      "file": "brain/modules/unified_enhancement_loader.py",
      "success": false,
      "error": "no running event loop",
      "error_type": "other_error",
      "imports": [
        "logging",
        "asyncio",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "datetime.datetime",
        "dataclasses.dataclass",
        "enum.Enum",
        "core.enhanced_command_processor.EnhancedCommandProcessor",
        "core.enhanced_command_processor.EnhancementLayer",
        "core.enhanced_command_processor.EnhancementTier",
        "brain.core.module.BrainModule",
        "brain.core.confidence.AAIConfidenceScorer"
      ]
    },
    "brain/modules/unified_intelligence_coordinator.py": {
      "file": "brain/modules/unified_intelligence_coordinator.py",
      "success": false,
      "error": "name 'AgentMessage' is not defined",
      "error_type": "other_error",
      "imports": [
        "logging",
        "asyncio",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timedelta",
        "dataclasses.dataclass",
        "enum.Enum",
        "collections.defaultdict",
        "brain.core.module.BrainModule",
        "brain.core.confidence.AAIConfidenceScorer",
        "core.enhanced_command_processor.EnhancedCommandProcessor",
        "core.enhanced_command_processor.EnhancementResult",
        "brain.modules.unified_enhancement_loader.UnifiedEnhancementLoader",
        "core.unified_enhancement_coordinator.UnifiedEnhancementCoordinator",
        "core.unified_enhancement_coordinator.CoordinationContext",
        "core.unified_enhancement_coordinator.CoordinationMode",
        "core.unified_enhancement_coordinator.CoordinationPriority",
        "core.resource_optimization_manager.ResourceOptimizationManager",
        "core.resource_optimization_manager.ResourceRequest",
        "core.resource_optimization_manager.ResourceType",
        "core.resource_optimization_manager.ResourcePriority",
        "core.agent_interoperability_framework.AgentInteroperabilityFramework",
        "core.agent_interoperability_framework.AgentRole",
        "core.agent_interoperability_framework.MessageType",
        "core.agent_interoperability_framework.MessagePriority",
        "core.agent_interoperability_framework.AgentMessage",
        "core.realtime_orchestration_monitor.RealtimeOrchestrationMonitor",
        "core.realtime_orchestration_monitor.WorkflowStatus",
        "collections.defaultdict"
      ]
    },
    "core/agent_interoperability_framework.py": {
      "file": "core/agent_interoperability_framework.py",
      "success": false,
      "error": "no running event loop",
      "error_type": "other_error",
      "imports": [
        "logging",
        "asyncio",
        "json",
        "uuid",
        "weakref",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "typing.Union",
        "typing.Callable",
        "datetime.datetime",
        "datetime.timedelta",
        "dataclasses.dataclass",
        "dataclasses.field",
        "enum.Enum",
        "collections.defaultdict",
        "collections.deque"
      ]
    },
    "core/realtime_orchestration_monitor.py": {
      "file": "core/realtime_orchestration_monitor.py",
      "success": false,
      "error": "no running event loop",
      "error_type": "other_error",
      "imports": [
        "logging",
        "asyncio",
        "json",
        "time",
        "statistics",
        "weakref",
        "asyncio"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "typing.Union",
        "typing.Callable",
        "datetime.datetime",
        "datetime.timedelta",
        "dataclasses.dataclass",
        "dataclasses.field",
        "enum.Enum",
        "collections.defaultdict",
        "collections.deque",
        "core.unified_enhancement_coordinator.UnifiedEnhancementCoordinator",
        "core.unified_enhancement_coordinator.CoordinationResult",
        "core.resource_optimization_manager.ResourceOptimizationManager",
        "core.agent_interoperability_framework.AgentInteroperabilityFramework"
      ]
    },
    "enhancements/memory/command_enhancer.py": {
      "file": "enhancements/memory/command_enhancer.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "asyncio",
        "asyncio",
        "hashlib"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Callable",
        "datetime.datetime",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "pathlib.Path",
        "memory_layer.MemoryLayer",
        "memory_layer.MemoryContext",
        "workflow_memory.WorkflowMemoryManager",
        "config.MemoryConfig"
      ]
    },
    "enhancements/memory/memory_layer.py": {
      "file": "enhancements/memory/memory_layer.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "asyncio",
        "hashlib",
        "numpy",
        "requests",
        "asyncio",
        "numpy"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timedelta",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "pathlib.Path",
        "config.MemoryConfig",
        "supabase.create_client",
        "supabase.Client"
      ]
    },
    "enhancements/memory/workflow_memory.py": {
      "file": "enhancements/memory/workflow_memory.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "asyncio",
        "asyncio",
        "hashlib"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timedelta",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "pathlib.Path",
        "memory_layer.MemoryLayer",
        "memory_layer.MemoryItem",
        "memory_layer.MemoryContext",
        "config.MemoryConfig",
        "memory_layer.MemoryLayer",
        "config.MemoryConfig"
      ]
    },
    "ottomator-agents/TinyDM-agent/database.py": {
      "file": "ottomator-agents/TinyDM-agent/database.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os",
        "logging"
      ],
      "from_imports": [
        "supabase.create_client",
        "dotenv.load_dotenv",
        "typing.Dict",
        "typing.Any"
      ]
    },
    "ottomator-agents/TinyDM-agent/main.py": {
      "file": "ottomator-agents/TinyDM-agent/main.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "base64",
        "logging",
        "uvicorn"
      ],
      "from_imports": [
        "fastapi.FastAPI",
        "fastapi.Header",
        "fastapi.HTTPException",
        "fastapi.middleware.cors.CORSMiddleware",
        "dotenv.load_dotenv",
        "google.genai",
        "database.store_message",
        "database.get_session_messages",
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/agent.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "logging"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "dataclasses.dataclass",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "dotenv.load_dotenv",
        "prompts.SYSTEM_PROMPT",
        "providers.get_llm_model",
        "tools.vector_search_tool",
        "tools.graph_search_tool",
        "tools.hybrid_search_tool",
        "tools.get_document_tool",
        "tools.list_documents_tool",
        "tools.get_entity_relationships_tool",
        "tools.get_entity_timeline_tool",
        "tools.VectorSearchInput",
        "tools.GraphSearchInput",
        "tools.HybridSearchInput",
        "tools.DocumentInput",
        "tools.DocumentListInput",
        "tools.EntityRelationshipInput",
        "tools.EntityTimelineInput"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/api.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/api.py",
      "success": false,
      "error": "No module named 'uvicorn'",
      "error_type": "import_error",
      "imports": [
        "os",
        "asyncio",
        "json",
        "logging",
        "uuid",
        "uvicorn",
        "json"
      ],
      "from_imports": [
        "contextlib.asynccontextmanager",
        "typing.Dict",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "datetime.datetime",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Request",
        "fastapi.Depends",
        "fastapi.responses.StreamingResponse",
        "fastapi.middleware.cors.CORSMiddleware",
        "fastapi.middleware.gzip.GZipMiddleware",
        "dotenv.load_dotenv",
        "agent.rag_agent",
        "agent.AgentDependencies",
        "db_utils.initialize_database",
        "db_utils.close_database",
        "db_utils.create_session",
        "db_utils.get_session",
        "db_utils.add_message",
        "db_utils.get_session_messages",
        "db_utils.test_connection",
        "graph_utils.initialize_graph",
        "graph_utils.close_graph",
        "graph_utils.test_graph_connection",
        "models.ChatRequest",
        "models.ChatResponse",
        "models.SearchRequest",
        "models.SearchResponse",
        "models.StreamDelta",
        "models.ErrorResponse",
        "models.HealthStatus",
        "models.ToolCall",
        "tools.vector_search_tool",
        "tools.graph_search_tool",
        "tools.hybrid_search_tool",
        "tools.list_documents_tool",
        "tools.VectorSearchInput",
        "tools.GraphSearchInput",
        "tools.HybridSearchInput",
        "tools.DocumentListInput",
        "pydantic_ai.messages.PartStartEvent",
        "pydantic_ai.messages.PartDeltaEvent",
        "pydantic_ai.messages.TextPartDelta"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/db_utils.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/db_utils.py",
      "success": false,
      "error": "No module named 'asyncpg'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "asyncio",
        "logging",
        "asyncpg"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timedelta",
        "datetime.timezone",
        "contextlib.asynccontextmanager",
        "uuid.UUID",
        "asyncpg.pool.Pool",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/graph_utils.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/graph_utils.py",
      "success": false,
      "error": "No module named 'graphiti_core'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "logging",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "datetime.timezone",
        "contextlib.asynccontextmanager",
        "graphiti_core.Graphiti",
        "graphiti_core.utils.maintenance.graph_data_operations.clear_data",
        "graphiti_core.llm_client.config.LLMConfig",
        "graphiti_core.llm_client.openai_client.OpenAIClient",
        "graphiti_core.embedder.openai.OpenAIEmbedder",
        "graphiti_core.embedder.openai.OpenAIEmbedderConfig",
        "graphiti_core.cross_encoder.openai_reranker_client.OpenAIRerankerClient",
        "dotenv.load_dotenv",
        "graphiti_core.nodes.EpisodeType"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/providers.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/providers.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "openai"
      ],
      "from_imports": [
        "typing.Optional",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent/tools.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/tools.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "logging",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "datetime.datetime",
        "pydantic.BaseModel",
        "pydantic.Field",
        "dotenv.load_dotenv",
        "db_utils.vector_search",
        "db_utils.hybrid_search",
        "db_utils.get_document",
        "db_utils.list_documents",
        "db_utils.get_document_chunks",
        "graph_utils.search_knowledge_graph",
        "graph_utils.get_entity_relationships",
        "graph_utils.graph_client",
        "models.ChunkResult",
        "models.GraphSearchResult",
        "models.DocumentMetadata",
        "providers.get_embedding_client",
        "providers.get_embedding_model"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/ingestion/chunker.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/chunker.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "re",
        "logging",
        "asyncio",
        "sys",
        "os"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "agent.providers.get_embedding_client",
        "agent.providers.get_ingestion_model",
        "agent.providers.get_embedding_client",
        "agent.providers.get_ingestion_model",
        "pydantic_ai.Agent"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/ingestion/embedder.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/embedder.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "asyncio",
        "logging",
        "json",
        "sys",
        "os",
        "hashlib"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "datetime.datetime",
        "openai.RateLimitError",
        "openai.APIError",
        "dotenv.load_dotenv",
        "chunker.DocumentChunk",
        "agent.providers.get_embedding_client",
        "agent.providers.get_embedding_model",
        "chunker.ChunkingConfig",
        "chunker.create_chunker",
        "agent.providers.get_embedding_client",
        "agent.providers.get_embedding_model"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/ingestion/ingest.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/ingest.py",
      "success": false,
      "error": "No module named 'asyncpg'",
      "error_type": "import_error",
      "imports": [
        "os",
        "asyncio",
        "logging",
        "json",
        "glob",
        "argparse",
        "asyncpg",
        "sys",
        "os",
        "yaml"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "datetime.datetime",
        "dotenv.load_dotenv",
        "chunker.ChunkingConfig",
        "chunker.create_chunker",
        "chunker.DocumentChunk",
        "embedder.create_embedder",
        "graph_builder.create_graph_builder",
        "agent.db_utils.initialize_database",
        "agent.db_utils.close_database",
        "agent.db_utils.db_pool",
        "agent.graph_utils.initialize_graph",
        "agent.graph_utils.close_graph",
        "agent.models.IngestionConfig",
        "agent.models.IngestionResult",
        "agent.db_utils.initialize_database",
        "agent.db_utils.close_database",
        "agent.db_utils.db_pool",
        "agent.graph_utils.initialize_graph",
        "agent.graph_utils.close_graph",
        "agent.models.IngestionConfig",
        "agent.models.IngestionResult"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_db_utils.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_db_utils.py",
      "success": false,
      "error": "No module named 'agent'",
      "error_type": "import_error",
      "imports": [
        "pytest",
        "asyncio",
        "json"
      ],
      "from_imports": [
        "unittest.mock.Mock",
        "unittest.mock.AsyncMock",
        "unittest.mock.patch",
        "datetime.datetime",
        "datetime.timezone",
        "datetime.timedelta",
        "agent.db_utils.DatabasePool",
        "agent.db_utils.create_session",
        "agent.db_utils.get_session",
        "agent.db_utils.update_session",
        "agent.db_utils.add_message",
        "agent.db_utils.get_session_messages",
        "agent.db_utils.get_document",
        "agent.db_utils.list_documents",
        "agent.db_utils.vector_search",
        "agent.db_utils.hybrid_search",
        "agent.db_utils.get_document_chunks",
        "agent.db_utils.test_connection"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_models.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_models.py",
      "success": false,
      "error": "No module named 'agent'",
      "error_type": "import_error",
      "imports": [
        "pytest"
      ],
      "from_imports": [
        "datetime.datetime",
        "uuid.uuid4",
        "agent.models.ChatRequest",
        "agent.models.SearchRequest",
        "agent.models.DocumentMetadata",
        "agent.models.ChunkResult",
        "agent.models.GraphSearchResult",
        "agent.models.SearchResponse",
        "agent.models.ChatResponse",
        "agent.models.StreamDelta",
        "agent.models.Document",
        "agent.models.Chunk",
        "agent.models.Session",
        "agent.models.Message",
        "agent.models.AgentDependencies",
        "agent.models.IngestionConfig",
        "agent.models.IngestionResult",
        "agent.models.ErrorResponse",
        "agent.models.HealthStatus",
        "agent.models.MessageRole",
        "agent.models.SearchType"
      ]
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests/ingestion/test_chunker.py": {
      "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/ingestion/test_chunker.py",
      "success": false,
      "error": "No module named 'ingestion.chunker'",
      "error_type": "import_error",
      "imports": [
        "pytest"
      ],
      "from_imports": [
        "unittest.mock.Mock",
        "unittest.mock.AsyncMock",
        "unittest.mock.patch",
        "ingestion.chunker.ChunkingConfig",
        "ingestion.chunker.DocumentChunk",
        "ingestion.chunker.SemanticChunker",
        "ingestion.chunker.SimpleChunker",
        "ingestion.chunker.create_chunker"
      ]
    },
    "ottomator-agents/ask-reddit-agent/agent_endpoint.py": {
      "file": "ottomator-agents/ask-reddit-agent/agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "httpx",
        "json",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "ai_agent.ai_agent",
        "ai_agent.Deps",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolReturnPart"
      ]
    },
    "ottomator-agents/ask-reddit-agent/ai_agent.py": {
      "file": "ottomator-agents/ask-reddit-agent/ai_agent.py",
      "success": false,
      "error": "No module named 'asyncpraw'",
      "error_type": "import_error",
      "imports": [
        "asyncpraw",
        "asyncio",
        "os",
        "httpx",
        "logging",
        "traceback",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "typing.Dict",
        "devtools.debug",
        "dotenv.load_dotenv",
        "openai.AsyncOpenAI",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/crawl4AI-agent/crawl4AI-examples/1-crawl_single_page.py": {
      "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/1-crawl_single_page.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio"
      ],
      "from_imports": [
        "crawl4ai.*"
      ]
    },
    "ottomator-agents/crawl4AI-agent/crawl4AI-examples/2-crawl_docs_sequential.py": {
      "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/2-crawl_docs_sequential.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "typing.List",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.markdown_generation_strategy.DefaultMarkdownGenerator",
        "xml.etree.ElementTree"
      ]
    },
    "ottomator-agents/crawl4AI-agent/crawl4AI-examples/3-crawl_docs_FAST.py": {
      "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/3-crawl_docs_FAST.py",
      "success": false,
      "error": "No module named 'psutil'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "psutil",
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "xml.etree.ElementTree",
        "typing.List",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.CacheMode"
      ]
    },
    "ottomator-agents/crawl4AI-agent/crawl_pydantic_ai_docs.py": {
      "file": "ottomator-agents/crawl4AI-agent/crawl_pydantic_ai_docs.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "json",
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "xml.etree.ElementTree",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "dataclasses.dataclass",
        "datetime.datetime",
        "datetime.timezone",
        "urllib.parse.urlparse",
        "dotenv.load_dotenv",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.CacheMode",
        "openai.AsyncOpenAI",
        "supabase.create_client",
        "supabase.Client"
      ]
    },
    "ottomator-agents/crawl4AI-agent/pydantic_ai_expert.py": {
      "file": "ottomator-agents/crawl4AI-agent/pydantic_ai_expert.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "asyncio",
        "httpx",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "openai.AsyncOpenAI",
        "supabase.Client",
        "typing.List"
      ]
    },
    "ottomator-agents/crawl4AI-agent/streamlit_ui.py": {
      "file": "ottomator-agents/crawl4AI-agent/streamlit_ui.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "streamlit",
        "json",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "typing.Literal",
        "typing.TypedDict",
        "supabase.Client",
        "openai.AsyncOpenAI",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.SystemPromptPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolCallPart",
        "pydantic_ai.messages.ToolReturnPart",
        "pydantic_ai.messages.RetryPromptPart",
        "pydantic_ai.messages.ModelMessagesTypeAdapter",
        "pydantic_ai_expert.pydantic_ai_expert",
        "pydantic_ai_expert.PydanticAIDeps",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert.py": {
      "file": "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "asyncio",
        "httpx",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "openai.AsyncOpenAI",
        "supabase.Client",
        "typing.List"
      ]
    },
    "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert_endpoint.py": {
      "file": "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "openai.AsyncOpenAI",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai_expert.pydantic_ai_expert",
        "pydantic_ai_expert.PydanticAIDeps"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/1-crawl_single_page.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/1-crawl_single_page.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio"
      ],
      "from_imports": [
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/2-crawl_docs_sequential.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/2-crawl_docs_sequential.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "typing.List",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.markdown_generation_strategy.DefaultMarkdownGenerator",
        "xml.etree.ElementTree"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/3-crawl_sitemap_in_parallel.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/3-crawl_sitemap_in_parallel.py",
      "success": false,
      "error": "No module named 'psutil'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "psutil",
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "typing.List",
        "xml.etree.ElementTree",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.CacheMode",
        "crawl4ai.MemoryAdaptiveDispatcher"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/4-crawl_llms_txt.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/4-crawl_llms_txt.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "re"
      ],
      "from_imports": [
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/5-crawl_site_recursively.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/5-crawl_site_recursively.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio"
      ],
      "from_imports": [
        "urllib.parse.urldefrag",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.CacheMode",
        "crawl4ai.MemoryAdaptiveDispatcher"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/insert_docs.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/insert_docs.py",
      "success": false,
      "error": "No module named 'crawl4ai'",
      "error_type": "import_error",
      "imports": [
        "argparse",
        "sys",
        "re",
        "asyncio",
        "requests"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "urllib.parse.urlparse",
        "urllib.parse.urldefrag",
        "xml.etree.ElementTree",
        "crawl4ai.AsyncWebCrawler",
        "crawl4ai.BrowserConfig",
        "crawl4ai.CrawlerRunConfig",
        "crawl4ai.CacheMode",
        "crawl4ai.MemoryAdaptiveDispatcher",
        "utils.get_chroma_client",
        "utils.get_or_create_collection",
        "utils.add_documents_to_collection"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/rag_agent.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/rag_agent.py",
      "success": false,
      "error": "No module named 'chromadb'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "argparse",
        "asyncio",
        "chromadb",
        "dotenv"
      ],
      "from_imports": [
        "dataclasses.dataclass",
        "typing.Optional",
        "pydantic_ai.RunContext",
        "pydantic_ai.agent.Agent",
        "openai.AsyncOpenAI",
        "utils.get_chroma_client",
        "utils.get_or_create_collection",
        "utils.query_collection",
        "utils.format_results_as_context"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/streamlit_app.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/streamlit_app.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.SystemPromptPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolCallPart",
        "pydantic_ai.messages.ToolReturnPart",
        "pydantic_ai.messages.RetryPromptPart",
        "pydantic_ai.messages.ModelMessagesTypeAdapter",
        "rag_agent.agent",
        "rag_agent.RAGDeps",
        "utils.get_chroma_client"
      ]
    },
    "ottomator-agents/crawl4AI-agent-v2/utils.py": {
      "file": "ottomator-agents/crawl4AI-agent-v2/utils.py",
      "success": false,
      "error": "No module named 'chromadb'",
      "error_type": "import_error",
      "imports": [
        "os",
        "pathlib",
        "chromadb"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "chromadb.utils.embedding_functions",
        "more_itertools.batched"
      ]
    },
    "ottomator-agents/file-agent/file_agent.py": {
      "file": "ottomator-agents/file-agent/file_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "base64",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "openai.OpenAI"
      ]
    },
    "ottomator-agents/foundational-rag-agent/agent/__init__.py": {
      "file": "ottomator-agents/foundational-rag-agent/agent/__init__.py",
      "success": false,
      "error": "No module named 'agent'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "agent.agent.RAGAgent",
        "agent.agent.AgentDeps",
        "agent.agent.agent",
        "agent.tools.KnowledgeBaseSearch",
        "agent.tools.KnowledgeBaseSearchParams",
        "agent.tools.KnowledgeBaseSearchResult"
      ]
    },
    "ottomator-agents/foundational-rag-agent/agent/aai_rag_agent.py": {
      "file": "ottomator-agents/foundational-rag-agent/agent/aai_rag_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "json",
        "uuid",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.TypedDict",
        "dataclasses.dataclass",
        "datetime.datetime",
        "pathlib.Path",
        "dotenv.load_dotenv",
        "database.aai_supabase_client.AAISupabaseRAGClient",
        "database.aai_supabase_client.AAIRAGSearchResult",
        "document_processing.embeddings.EmbeddingGenerator",
        "pydantic_ai.Agent",
        "pydantic_ai.tools.Tool",
        "pydantic.BaseModel",
        "pydantic.Field"
      ]
    },
    "ottomator-agents/foundational-rag-agent/agent/agent.py": {
      "file": "ottomator-agents/foundational-rag-agent/agent/agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.TypedDict",
        "pydantic_ai.Agent",
        "pydantic_ai.tools.Tool",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "agent.tools.KnowledgeBaseSearch",
        "agent.tools.KnowledgeBaseSearchParams",
        "agent.tools.KnowledgeBaseSearchResult",
        "agent.prompts.RAG_SYSTEM_PROMPT"
      ]
    },
    "ottomator-agents/foundational-rag-agent/agent/tools.py": {
      "file": "ottomator-agents/foundational-rag-agent/agent/tools.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "pydantic.BaseModel",
        "pydantic.Field",
        "database.setup.SupabaseClient",
        "document_processing.embeddings.EmbeddingGenerator"
      ]
    },
    "ottomator-agents/foundational-rag-agent/database/__init__.py": {
      "file": "ottomator-agents/foundational-rag-agent/database/__init__.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "database.setup.SupabaseClient",
        "database.setup.setup_database_tables"
      ]
    },
    "ottomator-agents/foundational-rag-agent/database/setup.py": {
      "file": "ottomator-agents/foundational-rag-agent/database/setup.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Any",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "supabase.create_client",
        "supabase.Client"
      ]
    },
    "ottomator-agents/foundational-rag-agent/database/setup_db.py": {
      "file": "ottomator-agents/foundational-rag-agent/database/setup_db.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "asyncio"
      ],
      "from_imports": [
        "pathlib.Path",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/foundational-rag-agent/document_processing/__init__.py": {
      "file": "ottomator-agents/foundational-rag-agent/document_processing/__init__.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "document_processing.chunker.TextChunker",
        "document_processing.embeddings.EmbeddingGenerator",
        "document_processing.processors.DocumentProcessor",
        "document_processing.processors.TxtProcessor",
        "document_processing.processors.PdfProcessor",
        "document_processing.processors.get_document_processor",
        "document_processing.ingestion.DocumentIngestionPipeline"
      ]
    },
    "ottomator-agents/foundational-rag-agent/document_processing/aai_ingestion_pipeline.py": {
      "file": "ottomator-agents/foundational-rag-agent/document_processing/aai_ingestion_pipeline.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "asyncio",
        "hashlib",
        "tempfile"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.Tuple",
        "pathlib.Path",
        "dataclasses.dataclass",
        "datetime.datetime",
        "document_processing.processors.get_document_processor",
        "document_processing.processors.get_supported_extensions",
        "document_processing.chunker.DocumentChunker",
        "document_processing.embeddings.EmbeddingGenerator",
        "database.aai_supabase_client.AAISupabaseRAGClient",
        "database.aai_supabase_client.AAIRAGDocument",
        "database.aai_supabase_client.AAIRAGChunk"
      ]
    },
    "ottomator-agents/foundational-rag-agent/document_processing/embeddings.py": {
      "file": "ottomator-agents/foundational-rag-agent/document_processing/embeddings.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "time",
        "openai"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "dotenv.load_dotenv",
        "pathlib.Path"
      ]
    },
    "ottomator-agents/foundational-rag-agent/document_processing/ingestion.py": {
      "file": "ottomator-agents/foundational-rag-agent/document_processing/ingestion.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "uuid",
        "logging"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "pathlib.Path",
        "datetime.datetime",
        "document_processing.chunker.TextChunker",
        "document_processing.embeddings.EmbeddingGenerator",
        "document_processing.processors.get_document_processor",
        "database.setup.SupabaseClient"
      ]
    },
    "ottomator-agents/foundational-rag-agent/document_processing/processors.py": {
      "file": "ottomator-agents/foundational-rag-agent/document_processing/processors.py",
      "success": false,
      "error": "No module named 'PyPDF2'",
      "error_type": "import_error",
      "imports": [
        "os",
        "logging",
        "PyPDF2"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "typing.List",
        "pathlib.Path"
      ]
    },
    "ottomator-agents/foundational-rag-agent/streamlit_ui_example.py": {
      "file": "ottomator-agents/foundational-rag-agent/streamlit_ui_example.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "httpx.AsyncClient",
        "Basic_Pydantic_AI_Agent.src.agent",
        "Basic_Pydantic_AI_Agent.src.AgentDeps",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.PartDeltaEvent",
        "pydantic_ai.messages.PartStartEvent",
        "pydantic_ai.messages.TextPartDelta"
      ]
    },
    "ottomator-agents/foundational-rag-agent/test_aai_rag_system.py": {
      "file": "ottomator-agents/foundational-rag-agent/test_aai_rag_system.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "asyncio",
        "tempfile"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "database.aai_supabase_client.AAISupabaseRAGClient",
        "document_processing.aai_ingestion_pipeline.AAIDocumentIngestionPipeline",
        "agent.aai_rag_agent.AAIRAGAgent"
      ]
    },
    "ottomator-agents/foundational-rag-agent/tests/test_agent.py": {
      "file": "ottomator-agents/foundational-rag-agent/tests/test_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "pytest"
      ],
      "from_imports": [
        "unittest.mock.MagicMock",
        "unittest.mock.patch",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "agent.agent.RAGAgent",
        "agent.tools.KnowledgeBaseSearchResult"
      ]
    },
    "ottomator-agents/foundational-rag-agent/tests/test_agent_tools.py": {
      "file": "ottomator-agents/foundational-rag-agent/tests/test_agent_tools.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "pytest",
        "asyncio"
      ],
      "from_imports": [
        "unittest.mock.MagicMock",
        "unittest.mock.patch",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "agent.tools.KnowledgeBaseSearch",
        "agent.tools.KnowledgeBaseSearchParams",
        "agent.tools.KnowledgeBaseSearchResult"
      ]
    },
    "ottomator-agents/foundational-rag-agent/tests/test_processors.py": {
      "file": "ottomator-agents/foundational-rag-agent/tests/test_processors.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "pytest",
        "tempfile"
      ],
      "from_imports": [
        "pathlib.Path",
        "document_processing.processors.DocumentProcessor",
        "document_processing.processors.TxtProcessor",
        "document_processing.processors.PdfProcessor",
        "document_processing.processors.get_document_processor"
      ]
    },
    "ottomator-agents/foundational-rag-agent/ui/aai_streamlit_app.py": {
      "file": "ottomator-agents/foundational-rag-agent/ui/aai_streamlit_app.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "asyncio",
        "tempfile",
        "streamlit",
        "plotly.express",
        "plotly.graph_objects"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "agent.aai_rag_agent.AAIRAGAgent",
        "agent.aai_rag_agent.AAIRAGResponse",
        "document_processing.aai_ingestion_pipeline.AAIDocumentIngestionPipeline",
        "document_processing.aai_ingestion_pipeline.AAIIngestionResult",
        "document_processing.processors.get_supported_extensions",
        "database.aai_supabase_client.AAISupabaseRAGClient"
      ]
    },
    "ottomator-agents/foundational-rag-agent/ui/app.py": {
      "file": "ottomator-agents/foundational-rag-agent/ui/app.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "asyncio",
        "streamlit",
        "tempfile",
        "traceback"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "pathlib.Path",
        "datetime.datetime",
        "document_processing.ingestion.DocumentIngestionPipeline",
        "document_processing.chunker.TextChunker",
        "document_processing.embeddings.EmbeddingGenerator",
        "database.setup.SupabaseClient",
        "agent.agent.RAGAgent",
        "agent.agent.agent",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.PartDeltaEvent",
        "pydantic_ai.messages.PartStartEvent",
        "pydantic_ai.messages.TextPartDelta"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_agent_lib.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_agent_lib.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "logfire",
        "nest_asyncio"
      ],
      "from_imports": [
        "__future__.annotations",
        "typing.List",
        "typing.Any",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "fastapi.HTTPException",
        "supabase.Client",
        "openai.AsyncOpenAI",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_general_lib.GeneralLib",
        "lib.codegen_utilities.get_app_config",
        "lib.codegen_generation_lib.CodeGenLib",
        "lib.codegen_ideation_lib.IdeationLib",
        "lib.codegen_app_ideation_lib.get_ideation_from_prompt_config",
        "lib.codegen_app_ideation_lib.get_buttons_config_for_prompt"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_postgres_agent.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_postgres_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncpg",
        "json",
        "os"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "contextlib.asynccontextmanager",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "gsam_ottomator_agent.gsam_agent_lib.run_agent"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_supabase_agent.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_supabase_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "gsam_ottomator_agent.gsam_agent_lib.run_agent"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent_app.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent_app.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.Annotated",
        "dotenv.load_dotenv",
        "pydantic.BaseModel",
        "fastapi.Depends",
        "fastapi.HTTPException",
        "fastapi.Header",
        "fastapi.Request",
        "fastapi.responses.FileResponse",
        "lib.codegen_utilities.log_debug",
        "gsam_ottomator_agent.gsam_supabase_agent.init_fastapi_app",
        "gsam_ottomator_agent.gsam_supabase_agent.verify_token",
        "gsam_ottomator_agent.gsam_supabase_agent.gsam_supabase_agent",
        "gsam_ottomator_agent.gsam_supabase_agent.AgentRequest",
        "gsam_ottomator_agent.gsam_supabase_agent.AgentResponse",
        "gsam_ottomator_agent.gsam_postgres_agent.init_fastapi_app",
        "gsam_ottomator_agent.gsam_postgres_agent.verify_token",
        "gsam_ottomator_agent.gsam_postgres_agent.gsam_postgres_agent",
        "gsam_ottomator_agent.gsam_postgres_agent.AgentRequest",
        "gsam_ottomator_agent.gsam_postgres_agent.AgentResponse"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_abstracts.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_abstracts.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_ai_abstracts_constants.DEFAULT_PROMPT_ENHANCEMENT_TEXT"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_aimlapi.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_aimlapi.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_provider_openai.get_openai_api_response"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_groq.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_groq.py",
      "success": false,
      "error": "No module named 'groq'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "groq.Groq",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_huggingface.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_huggingface.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "requests",
        "uuid"
      ],
      "from_imports": [
        "typing.Any",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.error_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_nvidia.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_nvidia.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_provider_openai.get_openai_api_response"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_ollama.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_ollama.py",
      "success": false,
      "error": "No module named 'ollama'",
      "error_type": "import_error",
      "imports": [
        "os",
        "ollama"
      ],
      "from_imports": [
        "ollama.Client",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openai.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openai.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "openai.OpenAI",
        "openai.resources.images.ImagesResponse",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_abstracts.prepare_model_params"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openrouter.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openrouter.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_provider_openai.get_openai_api_response"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_rhymes.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_rhymes.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "time",
        "requests",
        "json"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_provider_openai.get_openai_api_response",
        "lib.codegen_ai_abstracts.LlmProviderAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_together_ai.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_together_ai.py",
      "success": false,
      "error": "No module named 'together'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "together.Together",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_xai.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_xai.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_provider_openai.get_openai_api_response"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_utilities.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_utilities.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "lib.codegen_ai_abstracts.LlmProviderAbstract",
        "lib.codegen_ai_provider_openai.OpenaiLlm",
        "lib.codegen_ai_provider_openai.OpenaiImageGen",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_ai_provider_huggingface.HuggingFaceImageGen",
        "lib.codegen_ai_provider_rhymes.AllegroLlm",
        "lib.codegen_ai_provider_groq.GroqLlm",
        "lib.codegen_ai_provider_nvidia.NvidiaLlm",
        "lib.codegen_ai_provider_ollama.OllamaLlm",
        "lib.codegen_ai_provider_huggingface.HuggingFaceLlm",
        "lib.codegen_ai_provider_together_ai.TogetherAiLlm",
        "lib.codegen_ai_provider_rhymes.AriaLlm",
        "lib.codegen_ai_provider_xai.XaiLlm",
        "lib.codegen_ai_provider_openrouter.OpenRouterLlm"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "lib.codegen_db_abstracts.DatabaseAbstract",
        "lib.codegen_db_json.JsonFileDatabase",
        "lib.codegen_db_mongodb.MongoDBDatabase"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_abstracts.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_abstracts.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Union",
        "lib.codegen_utilities.get_new_item_id",
        "lib.codegen_utilities.get_default_resultset"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_json.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_json.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "uuid"
      ],
      "from_imports": [
        "lib.codegen_db_abstracts.DatabaseAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_mongodb.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_mongodb.py",
      "success": false,
      "error": "No module named 'pymongo'",
      "error_type": "import_error",
      "imports": [
        "uuid",
        "os"
      ],
      "from_imports": [
        "pymongo.MongoClient",
        "lib.codegen_db_abstracts.DatabaseAbstract"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_general_lib.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_general_lib.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "uuid"
      ],
      "from_imports": [
        "typing.Any",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_new_item_id",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.error_resultset",
        "lib.codegen_utilities.read_file",
        "lib.codegen_ai_utilities.TextToVideoProvider",
        "lib.codegen_ai_utilities.LlmProvider",
        "lib.codegen_ai_utilities.ImageGenProvider",
        "lib.codegen_powerpoint.PowerPointGenerator"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_generation_lib.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_generation_lib.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.error_resultset",
        "lib.codegen_general_lib.GeneralLib",
        "lib.codegen_schema_generator.JsonGenerator"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ideation_lib.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ideation_lib.py",
      "success": false,
      "error": "No module named 'lib'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.error_resultset",
        "lib.codegen_general_lib.GeneralLib"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_llamaindex_abstraction.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_llamaindex_abstraction.py",
      "success": false,
      "error": "No module named 'llama_index'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Any",
        "typing.ClassVar",
        "typing.List",
        "pydantic.ConfigDict",
        "llama_index.core.llms.CustomLLM",
        "llama_index.core.llms.CompletionResponse",
        "llama_index.core.llms.CompletionResponseGen",
        "llama_index.core.llms.LLMMetadata",
        "llama_index.core.llms.callbacks.llm_completion_callback",
        "lib.codegen_ai_utilities.LlmProvider"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_powerpoint.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_powerpoint.py",
      "success": false,
      "error": "No module named 'pptx'",
      "error_type": "import_error",
      "imports": [
        "os",
        "pptx"
      ],
      "from_imports": [
        "lib.codegen_utilities.create_dirs",
        "lib.codegen_utilities.read_file",
        "lib.codegen_utilities.log_debug"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_schema_generator.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_schema_generator.py",
      "success": false,
      "error": "No module named 'llama_index'",
      "error_type": "import_error",
      "imports": [
        "os",
        "time",
        "json",
        "pprint",
        "argparse"
      ],
      "from_imports": [
        "datetime.datetime",
        "llama_index.core.VectorStoreIndex",
        "llama_index.core.SimpleDirectoryReader",
        "lib.codegen_ai_utilities.LlmProvider",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.read_file",
        "lib.codegen_utilities.get_app_config",
        "lib.codegen_llamaindex_abstraction.LlamaIndexCustomLLM"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_streamlit_lib.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_streamlit_lib.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "os",
        "time",
        "json",
        "uuid",
        "html",
        "streamlit"
      ],
      "from_imports": [
        "typing.Any",
        "typing.Callable",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_utilities.get_date_time",
        "lib.codegen_utilities.get_new_item_id",
        "lib.codegen_utilities.get_default_resultset",
        "lib.codegen_utilities.read_file",
        "lib.codegen_utilities.is_an_url",
        "lib.codegen_utilities.path_exists",
        "lib.codegen_db.CodegenDatabase",
        "lib.codegen_ai_utilities.TextToVideoProvider",
        "lib.codegen_ai_utilities.LlmProvider",
        "lib.codegen_ai_utilities.ImageGenProvider",
        "lib.codegen_powerpoint.PowerPointGenerator"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/src/codegen_app_ideation.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/src/codegen_app_ideation.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "streamlit"
      ],
      "from_imports": [
        "lib.codegen_streamlit_lib.StreamlitLib",
        "lib.codegen_utilities.get_app_config",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_app_ideation_lib.get_ideation_form_config",
        "lib.codegen_app_ideation_lib.get_ideation_from_prompt_config"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/src/codegen_buttons.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/src/codegen_buttons.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "streamlit"
      ],
      "from_imports": [
        "lib.codegen_streamlit_lib.StreamlitLib",
        "lib.codegen_utilities.get_app_config"
      ]
    },
    "ottomator-agents/genericsuite-app-maker-agent/streamlit_app.py": {
      "file": "ottomator-agents/genericsuite-app-maker-agent/streamlit_app.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "streamlit"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "lib.codegen_streamlit_lib.StreamlitLib",
        "lib.codegen_utilities.get_app_config",
        "lib.codegen_utilities.log_debug",
        "lib.codegen_schema_generator.JsonGenerator",
        "lib.codegen_app_ideation_lib.get_ideation_form_config",
        "lib.codegen_app_ideation_lib.get_ideation_from_prompt_config",
        "src.codegen_app_ideation.show_ideation_form",
        "src.codegen_app_ideation.show_ideation_from_prompt",
        "src.codegen_buttons.add_buttons_for_main_tab",
        "src.codegen_buttons.add_buttons_for_code_gen_tab"
      ]
    },
    "ottomator-agents/google-a2a-agent/server.py": {
      "file": "ottomator-agents/google-a2a-agent/server.py",
      "success": false,
      "error": "No module named 'flask'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "flask.Flask",
        "flask.request",
        "flask.jsonify",
        "dotenv.load_dotenv",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent"
      ]
    },
    "ottomator-agents/graphiti-agent/agent.py": {
      "file": "ottomator-agents/graphiti-agent/agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "dataclasses.dataclass",
        "pydantic.BaseModel",
        "pydantic.Field",
        "dotenv.load_dotenv",
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "graphiti_core.Graphiti"
      ]
    },
    "ottomator-agents/graphiti-agent/llm_evolution.py": {
      "file": "ottomator-agents/graphiti-agent/llm_evolution.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "logging",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "datetime.timezone",
        "logging.INFO",
        "dotenv.load_dotenv",
        "graphiti_core.Graphiti",
        "graphiti_core.nodes.EpisodeType",
        "graphiti_core.utils.maintenance.graph_data_operations.clear_data"
      ]
    },
    "ottomator-agents/graphiti-agent/quickstart.py": {
      "file": "ottomator-agents/graphiti-agent/quickstart.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "logging",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "datetime.timezone",
        "logging.INFO",
        "dotenv.load_dotenv",
        "graphiti_core.Graphiti",
        "graphiti_core.nodes.EpisodeType",
        "graphiti_core.search.search_config_recipes.NODE_HYBRID_SEARCH_RRF"
      ]
    },
    "ottomator-agents/lead-generator-agent/leadgen_agent.py": {
      "file": "ottomator-agents/lead-generator-agent/leadgen_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "httpx",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "typing.Optional",
        "typing.List",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/lead-generator-agent/leadgen_agent_endpoint.py": {
      "file": "ottomator-agents/lead-generator-agent/leadgen_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "os",
        "uvicorn",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "leadgen_agent.hunter_agent",
        "leadgen_agent.HunterDeps"
      ]
    },
    "ottomator-agents/lead-generator-agent/studio_leadgen_agent.py": {
      "file": "ottomator-agents/lead-generator-agent/studio_leadgen_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os",
        "httpx",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "typing.Optional",
        "typing.List",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/lead-generator-agent/studio_leadgen_agent_endpoint.py": {
      "file": "ottomator-agents/lead-generator-agent/studio_leadgen_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "os",
        "uvicorn",
        "asyncio"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "studio_leadgen_agent.hunter_agent",
        "studio_leadgen_agent.HunterDeps"
      ]
    },
    "ottomator-agents/light-rag-agent/BasicRAG/insert_pydantic_docs.py": {
      "file": "ottomator-agents/light-rag-agent/BasicRAG/insert_pydantic_docs.py",
      "success": false,
      "error": "No module named 'utils'",
      "error_type": "import_error",
      "imports": [
        "argparse",
        "hashlib",
        "os",
        "re",
        "httpx"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Tuple",
        "utils.get_chroma_client",
        "utils.get_or_create_collection",
        "utils.add_documents_to_collection"
      ]
    },
    "ottomator-agents/light-rag-agent/BasicRAG/rag_agent.py": {
      "file": "ottomator-agents/light-rag-agent/BasicRAG/rag_agent.py",
      "success": false,
      "error": "No module named 'chromadb'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "argparse",
        "asyncio",
        "chromadb",
        "dotenv"
      ],
      "from_imports": [
        "dataclasses.dataclass",
        "typing.Optional",
        "pydantic_ai.RunContext",
        "pydantic_ai.agent.Agent",
        "openai.AsyncOpenAI",
        "utils.get_chroma_client",
        "utils.get_or_create_collection",
        "utils.query_collection",
        "utils.format_results_as_context"
      ]
    },
    "ottomator-agents/light-rag-agent/BasicRAG/streamlit_app.py": {
      "file": "ottomator-agents/light-rag-agent/BasicRAG/streamlit_app.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.SystemPromptPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolCallPart",
        "pydantic_ai.messages.ToolReturnPart",
        "pydantic_ai.messages.RetryPromptPart",
        "pydantic_ai.messages.ModelMessagesTypeAdapter",
        "rag_agent.agent",
        "rag_agent.RAGDeps",
        "utils.get_chroma_client"
      ]
    },
    "ottomator-agents/light-rag-agent/BasicRAG/utils.py": {
      "file": "ottomator-agents/light-rag-agent/BasicRAG/utils.py",
      "success": false,
      "error": "No module named 'chromadb'",
      "error_type": "import_error",
      "imports": [
        "os",
        "pathlib",
        "chromadb"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "typing.Optional",
        "chromadb.utils.embedding_functions",
        "more_itertools.batched"
      ]
    },
    "ottomator-agents/light-rag-agent/LightRAG/insert_pydantic_docs.py": {
      "file": "ottomator-agents/light-rag-agent/LightRAG/insert_pydantic_docs.py",
      "success": false,
      "error": "No module named 'lightrag'",
      "error_type": "import_error",
      "imports": [
        "os",
        "asyncio",
        "dotenv",
        "httpx"
      ],
      "from_imports": [
        "lightrag.LightRAG",
        "lightrag.llm.openai.gpt_4o_mini_complete",
        "lightrag.llm.openai.openai_embed",
        "lightrag.kg.shared_storage.initialize_pipeline_status"
      ]
    },
    "ottomator-agents/light-rag-agent/LightRAG/rag_agent.py": {
      "file": "ottomator-agents/light-rag-agent/LightRAG/rag_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "sys",
        "argparse",
        "asyncio",
        "dotenv"
      ],
      "from_imports": [
        "dataclasses.dataclass",
        "pydantic_ai.RunContext",
        "pydantic_ai.agent.Agent",
        "openai.AsyncOpenAI",
        "lightrag.LightRAG",
        "lightrag.QueryParam",
        "lightrag.llm.openai.gpt_4o_mini_complete",
        "lightrag.llm.openai.openai_embed",
        "lightrag.kg.shared_storage.initialize_pipeline_status"
      ]
    },
    "ottomator-agents/light-rag-agent/LightRAG/streamlit_app.py": {
      "file": "ottomator-agents/light-rag-agent/LightRAG/streamlit_app.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.SystemPromptPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolCallPart",
        "pydantic_ai.messages.ToolReturnPart",
        "pydantic_ai.messages.RetryPromptPart",
        "pydantic_ai.messages.ModelMessagesTypeAdapter",
        "lightrag.LightRAG",
        "lightrag.llm.openai.gpt_4o_mini_complete",
        "lightrag.llm.openai.openai_embed",
        "lightrag.kg.shared_storage.initialize_pipeline_status",
        "rag_agent.agent",
        "rag_agent.RAGDeps"
      ]
    },
    "ottomator-agents/light-rag-agent/LightRAG/super-basic-lightrag.py": {
      "file": "ottomator-agents/light-rag-agent/LightRAG/super-basic-lightrag.py",
      "success": false,
      "error": "No module named 'lightrag'",
      "error_type": "import_error",
      "imports": [
        "asyncio"
      ],
      "from_imports": [
        "lightrag.LightRAG",
        "lightrag.QueryParam",
        "lightrag.llm.openai.gpt_4o_mini_complete",
        "lightrag.llm.openai.gpt_4o_complete",
        "lightrag.llm.openai.openai_embed",
        "lightrag.kg.shared_storage.initialize_pipeline_status"
      ]
    },
    "ottomator-agents/mcp-agent-army/basic-pydantic-mcp-agent/pydantic_mcp_agent.py": {
      "file": "ottomator-agents/mcp-agent-army/basic-pydantic-mcp-agent/pydantic_mcp_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/mcp-agent-army/mcp_agent_army.py": {
      "file": "ottomator-agents/mcp-agent-army/mcp_agent_army.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "contextlib.AsyncExitStack",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army.py": {
      "file": "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "contextlib.AsyncExitStack",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army_endpoint.py": {
      "file": "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "contextlib.asynccontextmanager",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "mcp_agent_army.get_mcp_agent_army"
      ]
    },
    "ottomator-agents/mem0-agent/iterations/v1-basic-mem0.py": {
      "file": "ottomator-agents/mem0-agent/iterations/v1-basic-mem0.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "dotenv.load_dotenv",
        "openai.OpenAI",
        "mem0.Memory"
      ]
    },
    "ottomator-agents/mem0-agent/iterations/v2-supabase-mem0.py": {
      "file": "ottomator-agents/mem0-agent/iterations/v2-supabase-mem0.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "openai.OpenAI",
        "mem0.Memory"
      ]
    },
    "ottomator-agents/mem0-agent/iterations/v3-streamlit-supabase-mem0.py": {
      "file": "ottomator-agents/mem0-agent/iterations/v3-streamlit-supabase-mem0.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "os",
        "streamlit",
        "supabase",
        "uuid",
        "sys"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "openai.OpenAI",
        "mem0.Memory",
        "supabase.client.Client",
        "supabase.client.ClientOptions",
        "pathlib.Path"
      ]
    },
    "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent.py": {
      "file": "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent.py",
      "success": false,
      "error": "No module named 'logfire'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "dotenv.load_dotenv",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent_endpoint.py": {
      "file": "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "mem0.Memory",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "mem0_agent.mem0_agent",
        "mem0_agent.Mem0Deps"
      ]
    },
    "ottomator-agents/n8n-expert/ingest-n8n-workflows.py": {
      "file": "ottomator-agents/n8n-expert/ingest-n8n-workflows.py",
      "success": false,
      "error": "No module named 'langchain_core'",
      "error_type": "import_error",
      "imports": [
        "requests",
        "json",
        "time",
        "os"
      ],
      "from_imports": [
        "langchain_core.messages.AIMessage",
        "langchain_core.messages.HumanMessage",
        "langchain_openai.ChatOpenAI",
        "langchain_openai.OpenAIEmbeddings",
        "langchain_anthropic.ChatAnthropic",
        "supabase.create_client",
        "supabase.Client",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/nba-agent/agent_trial/nba_agent_1.py": {
      "file": "ottomator-agents/nba-agent/agent_trial/nba_agent_1.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "logging",
        "asyncio",
        "requests",
        "dateparser",
        "httpx",
        "re",
        "pytz",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.Request",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "openai.AsyncOpenAI",
        "datetime.datetime",
        "datetime.timedelta",
        "fastapi.responses.HTMLResponse"
      ]
    },
    "ottomator-agents/nba-agent/nba_agent.py": {
      "file": "ottomator-agents/nba-agent/nba_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "logging",
        "asyncio",
        "requests",
        "dateparser",
        "httpx",
        "re",
        "pytz",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.Request",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "openai.OpenAI",
        "datetime.datetime",
        "datetime.timedelta",
        "fastapi.responses.HTMLResponse"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v1_basic_agent.py": {
      "file": "ottomator-agents/openai-sdk-agent/v1_basic_agent.py",
      "success": false,
      "error": "cannot import name 'Agent' from 'agents' (unknown location)",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "agents.Agent",
        "agents.Runner",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v2_structured_output.py": {
      "file": "ottomator-agents/openai-sdk-agent/v2_structured_output.py",
      "success": false,
      "error": "cannot import name 'Agent' from 'agents' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "typing.List",
        "pydantic.BaseModel",
        "pydantic.Field",
        "agents.Agent",
        "agents.Runner",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v3_tool_calls.py": {
      "file": "ottomator-agents/openai-sdk-agent/v3_tool_calls.py",
      "success": false,
      "error": "cannot import name 'Agent' from 'agents' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "os"
      ],
      "from_imports": [
        "typing.List",
        "pydantic.BaseModel",
        "pydantic.Field",
        "agents.Agent",
        "agents.Runner",
        "agents.function_tool",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v4_handoffs.py": {
      "file": "ottomator-agents/openai-sdk-agent/v4_handoffs.py",
      "success": false,
      "error": "cannot import name 'Agent' from 'agents' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "os"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "pydantic.BaseModel",
        "pydantic.Field",
        "agents.Agent",
        "agents.Runner",
        "agents.function_tool",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v5_guardrails_and_context.py": {
      "file": "ottomator-agents/openai-sdk-agent/v5_guardrails_and_context.py",
      "success": false,
      "error": "cannot import name 'Agent' from 'agents' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "logfire",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "dataclasses.dataclass",
        "typing.List",
        "typing.Optional",
        "pydantic.BaseModel",
        "pydantic.Field",
        "agents.Agent",
        "agents.RunContextWrapper",
        "agents.Runner",
        "agents.function_tool",
        "agents.ModelSettings",
        "agents.InputGuardrail",
        "agents.GuardrailFunctionOutput",
        "agents.InputGuardrailTripwireTriggered",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/openai-sdk-agent/v6_streamlit_agent.py": {
      "file": "ottomator-agents/openai-sdk-agent/v6_streamlit_agent.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "uuid",
        "json",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "v5_guardrails_and_context.travel_agent",
        "v5_guardrails_and_context.UserContext",
        "v5_guardrails_and_context.TravelPlan",
        "v5_guardrails_and_context.FlightRecommendation",
        "v5_guardrails_and_context.HotelRecommendation",
        "agents.Runner"
      ]
    },
    "ottomator-agents/ottomarkdown-agent/file_agent.py": {
      "file": "ottomator-agents/ottomarkdown-agent/file_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "base64",
        "hashlib",
        "logging",
        "imghdr",
        "io",
        "re",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.Request",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "openai.OpenAI",
        "markitdown.MarkItDown",
        "datetime.datetime"
      ]
    },
    "ottomator-agents/ottomarkdown-agent/validation_test.py": {
      "file": "ottomator-agents/ottomarkdown-agent/validation_test.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "base64",
        "io",
        "requests",
        "mimetypes",
        "time",
        "re",
        "httpx",
        "asyncio"
      ],
      "from_imports": [
        "openai.OpenAI",
        "dotenv.load_dotenv",
        "dotenv.find_dotenv",
        "markitdown.MarkItDown",
        "pathlib.Path"
      ]
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/streamlit_ui.py": {
      "file": "ottomator-agents/pydantic-ai-advanced-researcher/streamlit_ui.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "json",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "httpx.AsyncClient",
        "datetime.datetime",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.messages.ModelTextResponse",
        "pydantic_ai.messages.UserPrompt",
        "web_search_agent.web_search_agent",
        "web_search_agent.Deps"
      ]
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_agent.py": {
      "file": "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_agent.py",
      "success": false,
      "error": "No module named 'logfire'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "devtools.debug",
        "httpx.AsyncClient",
        "dotenv.load_dotenv",
        "supabase.Client",
        "openai.AsyncOpenAI",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_endpoint.py": {
      "file": "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "web_search_agent.web_search_agent",
        "web_search_agent.WebResearcherDeps"
      ]
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent.py": {
      "file": "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent.py",
      "success": false,
      "error": "No module named 'logfire'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "devtools.debug",
        "httpx.AsyncClient",
        "dotenv.load_dotenv",
        "openai.AsyncOpenAI",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent_streamlit.py": {
      "file": "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent_streamlit.py",
      "success": false,
      "error": "No module named 'logfire'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "devtools.debug",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/pydantic-ai-langfuse/configure_langfuse.py": {
      "file": "ottomator-agents/pydantic-ai-langfuse/configure_langfuse.py",
      "success": false,
      "error": "No module named 'opentelemetry'",
      "error_type": "import_error",
      "imports": [
        "nest_asyncio",
        "logfire",
        "base64",
        "os"
      ],
      "from_imports": [
        "opentelemetry.trace",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/pydantic-ai-langfuse/iterations/simple_langfuse.py": {
      "file": "ottomator-agents/pydantic-ai-langfuse/iterations/simple_langfuse.py",
      "success": false,
      "error": "No module named 'langfuse'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "langfuse.decorators.observe",
        "langfuse.openai.openai",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/pydantic-ai-langfuse/iterations/simple_pydantic_ai.py": {
      "file": "ottomator-agents/pydantic-ai-langfuse/iterations/simple_pydantic_ai.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "nest_asyncio",
        "asyncio",
        "logfire",
        "base64",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/pydantic-ai-langfuse/pydantic_ai_langfuse_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langfuse/pydantic_ai_langfuse_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "contextlib.AsyncExitStack",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "configure_langfuse.configure_langfuse"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agent_graph.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agent_graph.py",
      "success": false,
      "error": "No module named 'langgraph'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "asyncio",
        "sys",
        "os"
      ],
      "from_imports": [
        "langgraph.checkpoint.memory.MemorySaver",
        "langgraph.graph.StateGraph",
        "langgraph.graph.START",
        "langgraph.graph.END",
        "langgraph.config.get_stream_writer",
        "typing.Annotated",
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing_extensions.TypedDict",
        "langgraph.types.interrupt",
        "pydantic.ValidationError",
        "dataclasses.dataclass",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelMessagesTypeAdapter",
        "agents.info_gathering_agent.info_gathering_agent",
        "agents.info_gathering_agent.TravelDetails",
        "agents.flight_agent.flight_agent",
        "agents.flight_agent.FlightDeps",
        "agents.hotel_agent.hotel_agent",
        "agents.hotel_agent.HotelDeps",
        "agents.activity_agent.activity_agent",
        "agents.final_planner_agent.final_planner_agent"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/activity_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/activity_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "typing.Any",
        "typing.List",
        "typing.Dict",
        "dataclasses.dataclass",
        "utils.get_model"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/final_planner_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/final_planner_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "utils.get_model"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/flight_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/flight_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "typing.Any",
        "typing.List",
        "typing.Dict",
        "dataclasses.dataclass",
        "utils.get_model"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/hotel_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/hotel_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "typing.List",
        "typing.Dict",
        "typing.Optional",
        "dataclasses.dataclass",
        "utils.get_model"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/info_gathering_agent.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/info_gathering_agent.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "logfire",
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic.BaseModel",
        "pydantic.Field",
        "typing.Any",
        "typing.List",
        "typing.Dict",
        "dataclasses.dataclass",
        "utils.get_model"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-info-sync.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-info-sync.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logfire",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.PartDeltaEvent",
        "pydantic_ai.messages.PartStartEvent",
        "pydantic_ai.messages.TextPartDelta",
        "rich.console.Console",
        "rich.console.ConsoleOptions",
        "rich.console.RenderResult",
        "rich.markdown.Markdown",
        "rich.syntax.Syntax",
        "rich.live.Live",
        "rich.text.Text",
        "pydantic_ai.Agent",
        "dotenv.load_dotenv",
        "typing.List",
        "agents.info_gathering_agent.info_gathering_agent"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-sync.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-sync.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logfire",
        "sys",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "typing.List",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "agents.flight_agent.flight_agent",
        "agents.flight_agent.FlightDeps"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/flight-cli.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/flight-cli.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logfire",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.PartDeltaEvent",
        "pydantic_ai.messages.PartStartEvent",
        "pydantic_ai.messages.TextPartDelta",
        "rich.console.Console",
        "rich.console.ConsoleOptions",
        "rich.console.RenderResult",
        "rich.markdown.Markdown",
        "rich.syntax.Syntax",
        "rich.live.Live",
        "rich.text.Text",
        "pydantic_ai.Agent",
        "dotenv.load_dotenv",
        "typing.List",
        "agents.flight_agent.flight_agent",
        "agents.flight_agent.FlightDeps"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/info_gathering_cli.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/info_gathering_cli.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logfire",
        "sys",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "rich.console.Console",
        "rich.console.ConsoleOptions",
        "rich.console.RenderResult",
        "pydantic.ValidationError",
        "rich.markdown.Markdown",
        "rich.syntax.Syntax",
        "rich.live.Live",
        "rich.text.Text",
        "pydantic_ai.Agent",
        "dotenv.load_dotenv",
        "typing.List",
        "agents.info_gathering_agent.info_gathering_agent"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/streamlit_ui.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/streamlit_ui.py",
      "success": false,
      "error": "No module named 'langgraph'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "uuid",
        "json",
        "os"
      ],
      "from_imports": [
        "langgraph.types.Command",
        "typing.List",
        "typing.Dict",
        "typing.Any",
        "pydantic.BaseModel",
        "datetime.datetime",
        "agent_graph.travel_agent_graph"
      ]
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/utils.py": {
      "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/utils.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "pydantic_ai.models.openai.OpenAIModel",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/extras/basic_mcp_agent.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/basic_mcp_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "pathlib",
        "asyncio",
        "sys",
        "os",
        "mcp_client"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic_ai.models.openai.OpenAIModel"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/extras/experimental_mcp_client.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/experimental_mcp_client.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "shutil",
        "json",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.RunContext",
        "pydantic_ai.Tool",
        "pydantic_ai.tools.ToolDefinition",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "mcp.client.stdio.stdio_client",
        "mcp.types.Tool",
        "contextlib.AsyncExitStack",
        "dotenv.load_dotenv",
        "typing.Any",
        "typing.List"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/extras/non_mcp_agent.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/non_mcp_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "pathlib",
        "asyncio",
        "sys",
        "os",
        "logfire"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "dataclasses.dataclass",
        "datetime.datetime",
        "typing.Any",
        "httpx.AsyncClient",
        "pydantic_ai.Agent",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic_ai.models.openai.OpenAIModel"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/extras/pydantic_mcp_streamlit.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/pydantic_mcp_streamlit.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "asyncio",
        "pathlib",
        "json",
        "os",
        "mcp_client"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "httpx.AsyncClient",
        "datetime.datetime",
        "pydantic_ai.Agent",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.SystemPromptPart",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.ToolCallPart",
        "pydantic_ai.messages.ToolReturnPart",
        "pydantic_ai.messages.RetryPromptPart",
        "pydantic_ai.messages.ModelMessagesTypeAdapter"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/mcp_client.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/mcp_client.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "shutil",
        "json",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.RunContext",
        "pydantic_ai.Tool",
        "pydantic_ai.tools.ToolDefinition",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "mcp.client.stdio.stdio_client",
        "mcp.types.Tool",
        "contextlib.AsyncExitStack",
        "typing.Any",
        "typing.List"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/pydantic_mcp_agent.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/pydantic_mcp_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "pathlib",
        "sys",
        "os",
        "mcp_client"
      ],
      "from_imports": [
        "rich.markdown.Markdown",
        "rich.console.Console",
        "rich.live.Live",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic_ai.models.openai.OpenAIModel"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/mcp_client.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/mcp_client.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "shutil",
        "json",
        "os"
      ],
      "from_imports": [
        "pydantic_ai.RunContext",
        "pydantic_ai.Tool",
        "pydantic_ai.tools.ToolDefinition",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "mcp.client.stdio.stdio_client",
        "mcp.types.Tool",
        "contextlib.AsyncExitStack",
        "dotenv.load_dotenv",
        "typing.Any",
        "typing.List"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "pathlib",
        "logfire",
        "os",
        "mcp_client"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.Agent"
      ]
    },
    "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent_endpoint.py": {
      "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "contextlib.asynccontextmanager",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "pydantic_mcp_agent.get_pydantic_ai_agent"
      ]
    },
    "ottomator-agents/pydantic-github-agent/cli.py": {
      "file": "ottomator-agents/pydantic-github-agent/cli.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logfire",
        "httpx",
        "os"
      ],
      "from_imports": [
        "__future__.annotations",
        "dotenv.load_dotenv",
        "typing.List",
        "pydantic_ai.messages.ModelMessage",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "github_agent.github_agent",
        "github_agent.GitHubDeps"
      ]
    },
    "ottomator-agents/pydantic-github-agent/github_agent.py": {
      "file": "ottomator-agents/pydantic-github-agent/github_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "tempfile",
        "shutil",
        "time",
        "re",
        "json",
        "httpx",
        "logfire"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "typing.Any",
        "typing.List",
        "typing.Dict",
        "pathlib.Path",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "devtools.debug"
      ]
    },
    "ottomator-agents/pydantic-github-agent/github_agent_endpoint.py": {
      "file": "ottomator-agents/pydantic-github-agent/github_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "github_agent.github_agent",
        "github_agent.GitHubDeps"
      ]
    },
    "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent.py": {
      "file": "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os",
        "tempfile",
        "logfire",
        "shutil",
        "time",
        "re",
        "json",
        "httpx"
      ],
      "from_imports": [
        "__future__.annotations",
        "dataclasses.dataclass",
        "typing.Any",
        "typing.List",
        "typing.Dict",
        "pathlib.Path",
        "dotenv.load_dotenv",
        "pydantic_ai.Agent",
        "pydantic_ai.ModelRetry",
        "pydantic_ai.RunContext",
        "pydantic_ai.models.openai.OpenAIModel",
        "devtools.debug"
      ]
    },
    "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent_endpoint.py": {
      "file": "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent_endpoint.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "github_agent.github_agent",
        "github_agent.GitHubDeps"
      ]
    },
    "ottomator-agents/python-local-ai-agent/main.py": {
      "file": "ottomator-agents/python-local-ai-agent/main.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "contextlib.asynccontextmanager",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.UserPromptPart",
        "pydantic_ai.messages.TextPart",
        "dataclasses.dataclass",
        "dotenv.load_dotenv",
        "httpx.AsyncClient"
      ]
    },
    "ottomator-agents/python-local-ai-agent/openai_compatible_demo.py": {
      "file": "ottomator-agents/python-local-ai-agent/openai_compatible_demo.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "openai.OpenAI",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/simple-mcp-agent/simple_mcp_agent_sse.py": {
      "file": "ottomator-agents/simple-mcp-agent/simple_mcp_agent_sse.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerHTTP",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/simple-mcp-agent/simple_mcp_agent_stdio.py": {
      "file": "ottomator-agents/simple-mcp-agent/simple_mcp_agent_stdio.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pydantic_ai.providers.openai.OpenAIProvider",
        "pydantic_ai.models.openai.OpenAIModel",
        "pydantic_ai.mcp.MCPServerStdio",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext"
      ]
    },
    "ottomator-agents/streambuzz-agent/agents/buzz_intern.py": {
      "file": "ottomator-agents/streambuzz-agent/agents/buzz_intern.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "pydantic_ai.Agent",
        "pydantic_ai.settings.ModelSettings",
        "constants.constants.MODEL_RETRIES",
        "constants.constants.PYDANTIC_AI_MODEL",
        "constants.prompts.BUZZ_INTERN_AGENT_SYSTEM_PROMPT"
      ]
    },
    "ottomator-agents/streambuzz-agent/agents/buzz_master.py": {
      "file": "ottomator-agents/streambuzz-agent/agents/buzz_master.py",
      "success": false,
      "error": "No module named 'constants'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "constants.constants.CHAT_WRITE_INTERVAL",
        "constants.constants.MODEL_RETRIES",
        "constants.constants.PYDANTIC_AI_MODEL",
        "constants.enums.StateEnum",
        "constants.prompts.BUZZ_MASTER_SYSTEM_PROMPT",
        "exceptions.user_error.UserError",
        "models.youtube_models.StreamMetadataDB",
        "models.youtube_models.WriteChatModel",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.settings.ModelSettings",
        "utils.supabase_util"
      ]
    },
    "ottomator-agents/streambuzz-agent/agents/orchestrator.py": {
      "file": "ottomator-agents/streambuzz-agent/agents/orchestrator.py",
      "success": false,
      "error": "No module named 'pydantic_ai'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.List",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "constants.constants.START_STREAM_APPEND",
        "constants.enums.StreamerIntentEnum",
        "exceptions.user_error.UserError",
        "models.agent_models.AgentRequest",
        "utils.intent_util",
        "utils.rag_util.create_knowledge_base",
        "buzz_master.buzz_master_agent",
        "responder.responder_agent",
        "stream_starter.stream_starter_agent"
      ]
    },
    "ottomator-agents/streambuzz-agent/agents/responder.py": {
      "file": "ottomator-agents/streambuzz-agent/agents/responder.py",
      "success": false,
      "error": "No module named 'constants'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "constants.constants.MODEL_RETRIES",
        "constants.constants.PYDANTIC_AI_MODEL",
        "constants.prompts.RESPONDER_SYSTEM_PROMPT",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.settings.ModelSettings",
        "utils.supabase_util",
        "utils.rag_util.get_embedding"
      ]
    },
    "ottomator-agents/streambuzz-agent/agents/stream_starter.py": {
      "file": "ottomator-agents/streambuzz-agent/agents/stream_starter.py",
      "success": false,
      "error": "No module named 'constants'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Any",
        "typing.Dict",
        "constants.constants.MODEL_RETRIES",
        "constants.constants.PYDANTIC_AI_MODEL",
        "constants.prompts.STREAM_STARTER_AGENT_SYSTEM_PROMPT",
        "exceptions.user_error.UserError",
        "models.youtube_models.StreamMetadata",
        "models.youtube_models.StreamMetadataDB",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.settings.ModelSettings",
        "utils.supabase_util",
        "utils.youtube_util.deactivate_session",
        "utils.youtube_util.get_stream_metadata",
        "utils.youtube_util.validate_and_extract_youtube_id"
      ]
    },
    "ottomator-agents/streambuzz-agent/constants/constants.py": {
      "file": "ottomator-agents/streambuzz-agent/constants/constants.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "openai.OpenAI",
        "pydantic_ai.models.gemini.GeminiModel",
        "pydantic_ai.models.openai.OpenAIModel",
        "supabase.create_client"
      ]
    },
    "ottomator-agents/streambuzz-agent/models/youtube_models.py": {
      "file": "ottomator-agents/streambuzz-agent/models/youtube_models.py",
      "success": false,
      "error": "No module named 'constants'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Optional",
        "constants.enums.BuzzStatusEnum",
        "pydantic.BaseModel"
      ]
    },
    "ottomator-agents/streambuzz-agent/routers/chat_worker.py": {
      "file": "ottomator-agents/streambuzz-agent/routers/chat_worker.py",
      "success": false,
      "error": "No module named 'agents.buzz_intern'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "re"
      ],
      "from_imports": [
        "collections.defaultdict",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "fastapi.APIRouter",
        "agents.buzz_intern.buzz_intern_agent",
        "agents.responder.responder_agent",
        "constants.constants.YOUTUBE_LIVE_API_ENDPOINT",
        "constants.enums.BuzzStatusEnum",
        "constants.prompts.CHAT_ANALYSER_PROMPT",
        "constants.prompts.REPLY_SUMMARISER_PROMPT",
        "logger.log_method",
        "models.agent_models.ProcessFoundBuzz",
        "models.youtube_models.ChatIntent",
        "models.youtube_models.StreamBuzzModel",
        "models.youtube_models.WriteChatModel",
        "utils.supabase_util",
        "utils.youtube_util",
        "utils.supabase_util.store_message"
      ]
    },
    "ottomator-agents/streambuzz-agent/streambuzz.py": {
      "file": "ottomator-agents/streambuzz-agent/streambuzz.py",
      "success": false,
      "error": "No module named 'apscheduler'",
      "error_type": "import_error",
      "imports": [
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "contextlib.asynccontextmanager",
        "apscheduler.schedulers.asyncio.AsyncIOScheduler",
        "dotenv.load_dotenv",
        "fastapi.Depends",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.middleware.cors.CORSMiddleware",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "agents.orchestrator",
        "agents.buzz_intern.buzz_intern_agent",
        "constants.constants.CHAT_READ_INTERVAL",
        "constants.constants.CHAT_WRITE_INTERVAL",
        "constants.constants.CONVERSATION_CONTEXT",
        "exceptions.user_error.UserError",
        "models.agent_models.AgentRequest",
        "models.agent_models.AgentResponse",
        "routers.chat_worker",
        "routers.chat_worker.read_live_chats",
        "routers.chat_worker.write_live_chats",
        "utils.supabase_util.fetch_conversation_history",
        "utils.supabase_util.fetch_human_session_history",
        "utils.supabase_util.store_message"
      ]
    },
    "ottomator-agents/streambuzz-agent/utils/intent_util.py": {
      "file": "ottomator-agents/streambuzz-agent/utils/intent_util.py",
      "success": false,
      "error": "No module named 'constants'",
      "error_type": "import_error",
      "imports": [
        "re"
      ],
      "from_imports": [
        "typing.List",
        "constants.constants.CONFIDENCE_THRESHOLD",
        "constants.constants.STREAMER_INTENT_EXAMPLES",
        "constants.constants.YOUTUBE_URL_REGEX",
        "constants.enums.StreamerIntentEnum",
        "logger.log_method"
      ]
    },
    "ottomator-agents/streambuzz-agent/utils/rag_util.py": {
      "file": "ottomator-agents/streambuzz-agent/utils/rag_util.py",
      "success": false,
      "error": "No module named 'google'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "base64",
        "json",
        "os",
        "re",
        "google.generativeai"
      ],
      "from_imports": [
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "dotenv.load_dotenv",
        "agents.buzz_intern.buzz_intern_agent",
        "constants.constants.ACCEPTED_FILE_EXTENSION",
        "constants.constants.ACCEPTED_FILE_MIME",
        "constants.constants.ACCEPTED_FILE_QUANTITY",
        "constants.constants.CHUNK_SIZE",
        "constants.constants.EMBEDDING_DIMENSIONS",
        "constants.constants.EMBEDDING_MODEL_NAME",
        "constants.constants.MAX_FILE_SIZE_B",
        "constants.constants.MAX_FILE_SIZE_MB",
        "constants.constants.SUMMARY",
        "constants.constants.TITLE",
        "constants.prompts.TITLE_SUMMARY_PROMPT",
        "exceptions.user_error.UserError",
        "logger.log_method",
        "models.agent_models.AgentRequest",
        "models.agent_models.ProcessedChunk",
        "utils.supabase_util"
      ]
    },
    "ottomator-agents/streambuzz-agent/utils/supabase_util.py": {
      "file": "ottomator-agents/streambuzz-agent/utils/supabase_util.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "dotenv.load_dotenv",
        "fastapi.HTTPException",
        "pydantic_ai.messages.ModelRequest",
        "pydantic_ai.messages.ModelResponse",
        "pydantic_ai.messages.TextPart",
        "pydantic_ai.messages.UserPromptPart",
        "constants.constants.CONVERSATION_CONTEXT",
        "constants.constants.MESSAGES",
        "constants.constants.MODEL_RETRIES",
        "constants.constants.STREAMER_KB",
        "constants.constants.SUPABASE_CLIENT",
        "constants.constants.YT_BUZZ",
        "constants.constants.YT_REPLY",
        "constants.constants.YT_STREAMS",
        "constants.enums.BuzzStatusEnum",
        "constants.enums.StateEnum",
        "models.agent_models.ProcessedChunk",
        "models.youtube_models.StreamBuzzModel",
        "models.youtube_models.StreamMetadataDB",
        "models.youtube_models.WriteChatModel"
      ]
    },
    "ottomator-agents/streambuzz-agent/utils/youtube_util.py": {
      "file": "ottomator-agents/streambuzz-agent/utils/youtube_util.py",
      "success": false,
      "error": "No module named 'cachetools'",
      "error_type": "import_error",
      "imports": [
        "json",
        "os",
        "re",
        "time",
        "requests"
      ],
      "from_imports": [
        "urllib.parse.parse_qs",
        "urllib.parse.urlparse",
        "cachetools.func.ttl_cache",
        "dotenv.load_dotenv",
        "google.auth.transport.requests.Request",
        "google.oauth2.credentials.Credentials",
        "requests.HTTPError",
        "constants.constants.ALLOWED_DOMAINS",
        "constants.constants.OAUTH_TOKEN_URI",
        "constants.constants.YOUTUBE_API_ENDPOINT",
        "constants.constants.YOUTUBE_LIVE_API_ENDPOINT",
        "constants.constants.YOUTUBE_SSL",
        "constants.enums.BuzzStatusEnum",
        "exceptions.user_error.UserError",
        "logger.log_method",
        "utils.supabase_util"
      ]
    },
    "ottomator-agents/streambuzz-agent/youtube_credentials/get_youtube_tokens.py": {
      "file": "ottomator-agents/streambuzz-agent/youtube_credentials/get_youtube_tokens.py",
      "success": false,
      "error": "No module named 'google_auth_oauthlib'",
      "error_type": "import_error",
      "imports": [
        "os",
        "pickle"
      ],
      "from_imports": [
        "google_auth_oauthlib.flow.InstalledAppFlow",
        "google.auth.transport.requests.Request",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/mcp_client.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/mcp_client.py",
      "success": false,
      "error": "No module named 'exceptions'",
      "error_type": "import_error",
      "imports": [
        "os",
        "asyncio",
        "json",
        "logging",
        "pprint"
      ],
      "from_imports": [
        "exceptions.ConfigurationError",
        "exceptions.ConnectionError",
        "exceptions.ToolError",
        "dotenv.load_dotenv",
        "dataclasses.dataclass",
        "typing.Optional",
        "typing.Union",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "contextlib.AsyncExitStack",
        "colorama.init",
        "colorama.Fore",
        "colorama.Style",
        "pydantic.BaseModel",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.tools.Tool",
        "pydantic_ai.tools.ToolDefinition",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "mcp.client.stdio.stdio_client",
        "httpx.AsyncClient",
        "supabase.Client",
        "openai.AsyncOpenAI",
        "pydantic_ai.models.openai.OpenAIModel"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/thirdbrain_mcp_openai_agent.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/thirdbrain_mcp_openai_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "os",
        "logging",
        "uvicorn"
      ],
      "from_imports": [
        "__future__.annotations",
        "typing.Optional",
        "typing.Any",
        "typing.Dict",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.responses.JSONResponse",
        "contextlib.asynccontextmanager",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "exceptions.ConfigurationError",
        "exceptions.ToolError",
        "exceptions.DatabaseConnectionError",
        "mcp_client.MCPClient",
        "mcp_client.Deps",
        "mcp_client.logging",
        "mcp_client.agent_loop"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/__init__.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/__init__.py",
      "success": false,
      "error": "No module named 'mcp.server'",
      "error_type": "import_error",
      "imports": [
        "asyncio"
      ],
      "from_imports": [
        "server"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/server.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/server.py",
      "success": false,
      "error": "No module named 'mcp.server'",
      "error_type": "import_error",
      "imports": [
        "httpx",
        "mcp.types",
        "mcp.server.stdio",
        "asyncio"
      ],
      "from_imports": [
        "typing.Any",
        "mcp.server.models.InitializationOptions",
        "mcp.server.NotificationOptions",
        "mcp.server.Server"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_openai_client.example.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_openai_client.example.py",
      "success": false,
      "error": "No module named 'huggingface_hub'",
      "error_type": "import_error",
      "imports": [
        "json",
        "asyncio"
      ],
      "from_imports": [
        "huggingface_hub.get_token",
        "openai.AsyncOpenAI",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "mcp.client.stdio.stdio_client",
        "typing.Any",
        "typing.List"
      ]
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_proxy_pydantic_agent_client.example.py": {
      "file": "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_proxy_pydantic_agent_client.example.py",
      "success": false,
      "error": "cannot import name 'ClientSession' from 'mcp' (/mnt/c/Users/Brandon/AAI/mcp/__init__.py)",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "sys"
      ],
      "from_imports": [
        "typing.Optional",
        "typing.Dict",
        "typing.List",
        "typing.Union",
        "typing.Any",
        "contextlib.AsyncExitStack",
        "colorama.init",
        "colorama.Fore",
        "colorama.Style",
        "mcp.ClientSession",
        "mcp.StdioServerParameters",
        "pydantic.BaseModel",
        "pydantic_ai.Agent",
        "pydantic_ai.RunContext",
        "pydantic_ai.tools.Tool",
        "pydantic_ai.tools.ToolDefinition",
        "mcp.client.stdio.stdio_client",
        "anthropic.Anthropic",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/tweet-generator-agent/brave_api.py": {
      "file": "ottomator-agents/tweet-generator-agent/brave_api.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "requests"
      ],
      "from_imports": [
        "fastapi.HTTPException",
        "dotenv.load_dotenv",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/tweet-generator-agent/crawler_utils.py": {
      "file": "ottomator-agents/tweet-generator-agent/crawler_utils.py",
      "success": false,
      "error": "No module named 'bs4'",
      "error_type": "import_error",
      "imports": [
        "requests"
      ],
      "from_imports": [
        "bs4.BeautifulSoup",
        "urllib.parse.urlparse",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/tweet-generator-agent/main.py": {
      "file": "ottomator-agents/tweet-generator-agent/main.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os",
        "json",
        "uvicorn"
      ],
      "from_imports": [
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "pydantic.BaseModel",
        "supabase.create_client",
        "supabase.Client",
        "dotenv.load_dotenv",
        "brave_api.fetch_articles_from_brave",
        "openai_api.generate_twitter_drafts",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/tweet-generator-agent/openai_api.py": {
      "file": "ottomator-agents/tweet-generator-agent/openai_api.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json"
      ],
      "from_imports": [
        "fastapi.HTTPException",
        "dotenv.load_dotenv",
        "openai.OpenAI",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/tweet-generator-agent/streamlit_app.py": {
      "file": "ottomator-agents/tweet-generator-agent/streamlit_app.py",
      "success": false,
      "error": "No module named 'streamlit'",
      "error_type": "import_error",
      "imports": [
        "streamlit",
        "uuid",
        "os"
      ],
      "from_imports": [
        "voice_utils.transcribe_audio_file",
        "brave_api.fetch_articles_from_brave",
        "crawler_utils.crawl_articles",
        "openai_api.generate_twitter_drafts",
        "supabase_utils.log_message_to_supabase",
        "twitter_utils.post_tweet"
      ]
    },
    "ottomator-agents/tweet-generator-agent/supabase_utils.py": {
      "file": "ottomator-agents/tweet-generator-agent/supabase_utils.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "os"
      ],
      "from_imports": [
        "supabase.create_client",
        "supabase.Client",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/tweet-generator-agent/test_openai_generation.py": {
      "file": "ottomator-agents/tweet-generator-agent/test_openai_generation.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "json"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "openai.OpenAI"
      ]
    },
    "ottomator-agents/tweet-generator-agent/test_twitter_post.py": {
      "file": "ottomator-agents/tweet-generator-agent/test_twitter_post.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "tweepy"
      ],
      "from_imports": [
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/tweet-generator-agent/twitter_auth.py": {
      "file": "ottomator-agents/tweet-generator-agent/twitter_auth.py",
      "success": false,
      "error": "No module named 'tweepy'",
      "error_type": "import_error",
      "imports": [
        "os",
        "webbrowser",
        "ssl",
        "tweepy"
      ],
      "from_imports": [
        "http.server.HTTPServer",
        "http.server.BaseHTTPRequestHandler",
        "urllib.parse.parse_qs",
        "urllib.parse.urlparse",
        "dotenv.load_dotenv",
        "OpenSSL.crypto",
        "datetime.datetime",
        "datetime.timedelta"
      ]
    },
    "ottomator-agents/tweet-generator-agent/twitter_utils.py": {
      "file": "ottomator-agents/tweet-generator-agent/twitter_utils.py",
      "success": false,
      "error": "No module named 'tweepy'",
      "error_type": "import_error",
      "imports": [
        "os",
        "tweepy"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/tweet-generator-agent/voice_input.py": {
      "file": "ottomator-agents/tweet-generator-agent/voice_input.py",
      "success": false,
      "error": "No module named 'speech_recognition'",
      "error_type": "import_error",
      "imports": [
        "speech_recognition"
      ],
      "from_imports": []
    },
    "ottomator-agents/tweet-generator-agent/voice_utils.py": {
      "file": "ottomator-agents/tweet-generator-agent/voice_utils.py",
      "success": false,
      "error": "No module named 'supabase_utils'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "openai.OpenAI",
        "supabase_utils.log_message_to_supabase"
      ]
    },
    "ottomator-agents/youtube-summary-agent/main.py": {
      "file": "ottomator-agents/youtube-summary-agent/main.py",
      "success": false,
      "error": "No module named 'googleapiclient'",
      "error_type": "import_error",
      "imports": [
        "os",
        "googleapiclient.discovery",
        "googleapiclient.errors",
        "openai",
        "logging",
        "uvicorn"
      ],
      "from_imports": [
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Depends",
        "fastapi.security.HTTPBearer",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.middleware.cors.CORSMiddleware",
        "pydantic.BaseModel",
        "typing.Optional",
        "datetime.datetime",
        "youtube_transcript_api.YouTubeTranscriptApi",
        "dotenv.load_dotenv",
        "supabase.client.create_client",
        "supabase.client.Client"
      ]
    },
    "ottomator-agents/~sample-python-agent~/sample_postgres_agent.py": {
      "file": "ottomator-agents/~sample-python-agent~/sample_postgres_agent.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "asyncpg",
        "json",
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "contextlib.asynccontextmanager",
        "pydantic.BaseModel",
        "dotenv.load_dotenv"
      ]
    },
    "ottomator-agents/~sample-python-agent~/sample_supabase_agent.py": {
      "file": "ottomator-agents/~sample-python-agent~/sample_supabase_agent.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "sys",
        "os",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path"
      ]
    },
    "ottomator-agents/~voiceflow-dialog-api-integration~/voiceflow_integration.py": {
      "file": "ottomator-agents/~voiceflow-dialog-api-integration~/voiceflow_integration.py",
      "success": false,
      "error": "cannot import name 'create_client' from 'supabase' (unknown location)",
      "error_type": "import_error",
      "imports": [
        "requests",
        "sys",
        "os",
        "json",
        "uvicorn"
      ],
      "from_imports": [
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "typing.Union",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.Security",
        "fastapi.Depends",
        "fastapi.security.HTTPAuthorizationCredentials",
        "fastapi.security.HTTPBearer",
        "fastapi.middleware.cors.CORSMiddleware",
        "supabase.create_client",
        "supabase.Client",
        "pydantic.BaseModel",
        "dotenv.load_dotenv",
        "pathlib.Path"
      ]
    },
    "projects/enhanced-repository-analyzer/agents/__init__.py": {
      "file": "projects/enhanced-repository-analyzer/agents/__init__.py",
      "success": false,
      "error": "No module named 'agents.base_agent'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "base_agent.BaseAnalyzerAgent",
        "structure_agent.StructureAgent"
      ]
    },
    "projects/enhanced-repository-analyzer/agents/structure_agent.py": {
      "file": "projects/enhanced-repository-analyzer/agents/structure_agent.py",
      "success": false,
      "error": "No module named 'agents.base_agent'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "time",
        "tree_sitter_languages"
      ],
      "from_imports": [
        "collections.defaultdict",
        "pathlib.Path",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "agents.base_agent.BaseAnalyzerAgent",
        "agents.base_agent.AnalysisResult",
        "core.streaming_walker.FileInfo",
        "core.semantic_analyzer.SemanticAnalyzer",
        "core.semantic_analyzer.SemanticFeature",
        "core.pattern_registry.PatternMatch"
      ]
    },
    "projects/enhanced-repository-analyzer/api/__init__.py": {
      "file": "projects/enhanced-repository-analyzer/api/__init__.py",
      "success": false,
      "error": "No module named 'uvicorn'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "main.create_app",
        "models.*"
      ]
    },
    "projects/enhanced-repository-analyzer/api/main.py": {
      "file": "projects/enhanced-repository-analyzer/api/main.py",
      "success": false,
      "error": "No module named 'uvicorn'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "os",
        "uvicorn",
        "time",
        "uuid"
      ],
      "from_imports": [
        "contextlib.asynccontextmanager",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.BackgroundTasks",
        "fastapi.WebSocket",
        "fastapi.WebSocketDisconnect",
        "fastapi.middleware.cors.CORSMiddleware",
        "fastapi.responses.StreamingResponse",
        "pydantic.BaseModel",
        "pydantic.Field",
        "core.cache_manager.CacheManager",
        "core.pattern_registry.PatternRegistry",
        "core.semantic_analyzer.SemanticAnalyzer",
        "core.streaming_walker.StreamingFileWalker",
        "agents.structure_agent.StructureAgent",
        "integrations.openrouter_integration.OpenRouterIntegration"
      ]
    },
    "projects/enhanced-repository-analyzer/collaborative/__init__.py": {
      "file": "projects/enhanced-repository-analyzer/collaborative/__init__.py",
      "success": false,
      "error": "No module named 'test_module_2971404677243823967.workspace_manager'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "workspace_manager.WorkspaceManager",
        "annotation_system.AnnotationSystem",
        "knowledge_base.KnowledgeBase"
      ]
    },
    "projects/enhanced-repository-analyzer/integrations/__init__.py": {
      "file": "projects/enhanced-repository-analyzer/integrations/__init__.py",
      "success": false,
      "error": "No module named 'backoff'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "openrouter_integration.OpenRouterIntegration",
        "ide_integration.IDEIntegrationServer",
        "cicd_integration.CICDIntegration",
        "platform_integrations.PlatformIntegrator"
      ]
    },
    "projects/enhanced-repository-analyzer/integrations/openrouter_integration.py": {
      "file": "projects/enhanced-repository-analyzer/integrations/openrouter_integration.py",
      "success": false,
      "error": "No module named 'backoff'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "logging",
        "os",
        "time",
        "instructor",
        "backoff"
      ],
      "from_imports": [
        "datetime.datetime",
        "datetime.timedelta",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Type",
        "typing.TypeVar",
        "dataclasses.dataclass",
        "openai.AsyncOpenAI",
        "pydantic.BaseModel"
      ]
    },
    "projects/enhanced-repository-analyzer/ml/__init__.py": {
      "file": "projects/enhanced-repository-analyzer/ml/__init__.py",
      "success": false,
      "error": "No module named 'test_module_476234710954896751.predictive_models'",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "predictive_models.PredictiveQualityAnalyzer",
        "anomaly_detection.AnomalyDetectionEngine",
        "recommendation_engine.RecommendationEngine"
      ]
    },
    "projects/enhanced-repository-analyzer/tests/test_performance.py": {
      "file": "projects/enhanced-repository-analyzer/tests/test_performance.py",
      "success": false,
      "error": "No module named 'psutil'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "pytest",
        "time",
        "psutil",
        "tempfile"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.List",
        "core.streaming_walker.StreamingFileWalker",
        "core.streaming_walker.FileInfo",
        "core.cache_manager.CacheManager",
        "agents.structure_agent.StructureAgent",
        "core.semantic_analyzer.SemanticAnalyzer",
        "core.pattern_registry.PatternRegistry"
      ]
    },
    "projects/legacy-github-analyzer/comprehensive_analyzer_test.py": {
      "file": "projects/legacy-github-analyzer/comprehensive_analyzer_test.py",
      "success": false,
      "error": "[Errno 2] No such file or directory: '/mnt/c/Users/Brandon/AAI/projects/github-analyzer/test_analysis.log'",
      "error_type": "other_error",
      "imports": [
        "asyncio",
        "json",
        "logging",
        "sys",
        "time"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path",
        "analyzer_agents.MultiAgentOrchestrator",
        "brain.modules.github_analyzer.GitHubRepositoryAnalyzer"
      ]
    },
    "projects/legacy-github-analyzer/test_github_analyzer.py": {
      "file": "projects/legacy-github-analyzer/test_github_analyzer.py",
      "success": false,
      "error": "No module named 'github_analyzer'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "os",
        "tempfile",
        "unittest",
        "shutil",
        "sqlite3",
        "sys"
      ],
      "from_imports": [
        "pathlib.Path",
        "unittest.mock.Mock",
        "unittest.mock.patch",
        "unittest.mock.MagicMock",
        "github_analyzer.GitHubRepositoryAnalyzer",
        "github_analyzer.GitCloner",
        "github_analyzer.DockerSandbox",
        "github_analyzer.CodeStructureAnalyzer",
        "github_analyzer.SecurityAuditAnalyzer",
        "github_analyzer.ExtractedFeature",
        "github_analyzer.AnalysisReport",
        "github_analyzer.CompatibilityScore",
        "analyzer_agents.CodeStructureAgent",
        "analyzer_agents.SecurityAuditAgent",
        "analyzer_agents.QualityAssessmentAgent",
        "analyzer_agents.PerformanceProfilerAgent",
        "analyzer_agents.MultiAgentOrchestrator"
      ]
    },
    "research/mcp/server.py": {
      "file": "research/mcp/server.py",
      "success": false,
      "error": "No module named 'uvicorn'",
      "error_type": "import_error",
      "imports": [
        "asyncio",
        "json",
        "logging",
        "os",
        "sys",
        "uvicorn",
        "subprocess",
        "aiohttp",
        "aiohttp"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Any",
        "typing.Optional",
        "dataclasses.dataclass",
        "dataclasses.asdict",
        "fastapi.FastAPI",
        "fastapi.HTTPException",
        "fastapi.BackgroundTasks",
        "fastapi.middleware.cors.CORSMiddleware",
        "pydantic.BaseModel",
        "_map.openrouter_integration.OpenRouterResearchAgent",
        "_map.pattern_detector.CrossProjectPatternDetector"
      ]
    },
    "supabase/scripts/test_supabase_connection.py": {
      "file": "supabase/scripts/test_supabase_connection.py",
      "success": false,
      "error": "No module named 'dotenv'",
      "error_type": "import_error",
      "imports": [
        "os",
        "psycopg2",
        "json"
      ],
      "from_imports": [
        "dotenv.load_dotenv",
        "pathlib.Path"
      ]
    },
    "superclaude-v3/setup/base/installer.py": {
      "file": "superclaude-v3/setup/base/installer.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "json",
        "shutil",
        "tempfile"
      ],
      "from_imports": [
        "typing.List",
        "typing.Dict",
        "typing.Optional",
        "typing.Set",
        "typing.Tuple",
        "typing.Any",
        "pathlib.Path",
        "datetime.datetime",
        "component.Component",
        "DEFAULT_INSTALL_DIR"
      ]
    },
    "superclaude-v3/setup/components/__init__.py": {
      "file": "superclaude-v3/setup/components/__init__.py",
      "success": false,
      "error": "attempted relative import beyond top-level package",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "core.CoreComponent",
        "commands.CommandsComponent",
        "mcp.MCPComponent",
        "hooks.HooksComponent"
      ]
    },
    "superclaude-v3/setup/components/commands.py": {
      "file": "superclaude-v3/setup/components/commands.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Any",
        "pathlib.Path",
        "base.component.Component",
        "core.file_manager.FileManager",
        "core.settings_manager.SettingsManager",
        "utils.security.SecurityValidator",
        "utils.logger.get_logger"
      ]
    },
    "superclaude-v3/setup/components/core.py": {
      "file": "superclaude-v3/setup/components/core.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "json",
        "shutil"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Any",
        "pathlib.Path",
        "base.component.Component",
        "core.file_manager.FileManager",
        "core.settings_manager.SettingsManager",
        "utils.security.SecurityValidator",
        "utils.logger.get_logger"
      ]
    },
    "superclaude-v3/setup/components/hooks.py": {
      "file": "superclaude-v3/setup/components/hooks.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Any",
        "pathlib.Path",
        "base.component.Component",
        "core.file_manager.FileManager",
        "core.settings_manager.SettingsManager",
        "utils.security.SecurityValidator",
        "utils.logger.get_logger"
      ]
    },
    "superclaude-v3/setup/components/mcp.py": {
      "file": "superclaude-v3/setup/components/mcp.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "subprocess",
        "sys",
        "json",
        "os"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Any",
        "pathlib.Path",
        "base.component.Component",
        "core.settings_manager.SettingsManager",
        "utils.logger.get_logger",
        "utils.ui.confirm",
        "utils.ui.display_info",
        "utils.ui.display_warning"
      ]
    },
    "superclaude-v3/setup/core/__init__.py": {
      "file": "superclaude-v3/setup/core/__init__.py",
      "success": false,
      "error": "attempted relative import beyond top-level package",
      "error_type": "import_error",
      "imports": [],
      "from_imports": [
        "config_manager.ConfigManager",
        "settings_manager.SettingsManager",
        "file_manager.FileManager",
        "validator.Validator",
        "registry.ComponentRegistry"
      ]
    },
    "superclaude-v3/setup/core/registry.py": {
      "file": "superclaude-v3/setup/core/registry.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "importlib",
        "inspect",
        "sys"
      ],
      "from_imports": [
        "typing.Dict",
        "typing.List",
        "typing.Set",
        "typing.Optional",
        "typing.Type",
        "pathlib.Path",
        "base.component.Component"
      ]
    },
    "superclaude-v3/setup/operations/backup.py": {
      "file": "superclaude-v3/setup/operations/backup.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "sys",
        "time",
        "tarfile",
        "json",
        "argparse",
        "tempfile"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "typing.Tuple",
        "core.settings_manager.SettingsManager",
        "core.file_manager.FileManager",
        "utils.ui.display_header",
        "utils.ui.display_info",
        "utils.ui.display_success",
        "utils.ui.display_error",
        "utils.ui.display_warning",
        "utils.ui.Menu",
        "utils.ui.confirm",
        "utils.ui.ProgressBar",
        "utils.ui.Colors",
        "utils.ui.format_size",
        "utils.logger.get_logger",
        "DEFAULT_INSTALL_DIR",
        "OperationBase"
      ]
    },
    "superclaude-v3/setup/operations/install.py": {
      "file": "superclaude-v3/setup/operations/install.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "sys",
        "time",
        "argparse"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "base.installer.Installer",
        "core.registry.ComponentRegistry",
        "core.config_manager.ConfigManager",
        "core.validator.Validator",
        "utils.ui.display_header",
        "utils.ui.display_info",
        "utils.ui.display_success",
        "utils.ui.display_error",
        "utils.ui.display_warning",
        "utils.ui.Menu",
        "utils.ui.confirm",
        "utils.ui.ProgressBar",
        "utils.ui.Colors",
        "utils.ui.format_size",
        "utils.logger.get_logger",
        "DEFAULT_INSTALL_DIR",
        "PROJECT_ROOT",
        "OperationBase"
      ]
    },
    "superclaude-v3/setup/operations/uninstall.py": {
      "file": "superclaude-v3/setup/operations/uninstall.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "sys",
        "time",
        "argparse",
        "tarfile"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "core.registry.ComponentRegistry",
        "core.settings_manager.SettingsManager",
        "core.file_manager.FileManager",
        "utils.ui.display_header",
        "utils.ui.display_info",
        "utils.ui.display_success",
        "utils.ui.display_error",
        "utils.ui.display_warning",
        "utils.ui.Menu",
        "utils.ui.confirm",
        "utils.ui.ProgressBar",
        "utils.ui.Colors",
        "utils.logger.get_logger",
        "DEFAULT_INSTALL_DIR",
        "PROJECT_ROOT",
        "OperationBase",
        "utils.ui.format_size",
        "datetime.datetime"
      ]
    },
    "superclaude-v3/setup/operations/update.py": {
      "file": "superclaude-v3/setup/operations/update.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "sys",
        "time",
        "argparse"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.List",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "base.installer.Installer",
        "core.registry.ComponentRegistry",
        "core.config_manager.ConfigManager",
        "core.settings_manager.SettingsManager",
        "core.validator.Validator",
        "utils.ui.display_header",
        "utils.ui.display_info",
        "utils.ui.display_success",
        "utils.ui.display_error",
        "utils.ui.display_warning",
        "utils.ui.Menu",
        "utils.ui.confirm",
        "utils.ui.ProgressBar",
        "utils.ui.Colors",
        "utils.ui.format_size",
        "utils.logger.get_logger",
        "DEFAULT_INSTALL_DIR",
        "PROJECT_ROOT",
        "OperationBase"
      ]
    },
    "superclaude-v3/setup/utils/logger.py": {
      "file": "superclaude-v3/setup/utils/logger.py",
      "success": false,
      "error": "attempted relative import with no known parent package",
      "error_type": "import_error",
      "imports": [
        "logging",
        "sys"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path",
        "typing.Optional",
        "typing.Dict",
        "typing.Any",
        "enum.Enum",
        "ui.Colors"
      ]
    }
  },
  "import_errors": {
    "missing_dependency": [
      {
        "file": "agents/orchestration/primary_agent.py",
        "error": "No module named 'agents.orchestration.models.models'; 'agents.orchestration.models' is not a package"
      },
      {
        "file": "agents/r1_reasoning/confidence_scorer.py",
        "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package"
      },
      {
        "file": "agents/r1_reasoning/dual_model_agent.py",
        "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package"
      },
      {
        "file": "agents/r1_reasoning/reasoning_engine.py",
        "error": "No module named 'agents.r1_reasoning.models.models'; 'agents.r1_reasoning.models' is not a package"
      },
      {
        "file": "agents/specialized/filesystem_agent.py",
        "error": "No module named 'aiofiles'"
      },
      {
        "file": "agents/tech_expert/recommender.py",
        "error": "No module named 'agents.tech_expert.models.models'; 'agents.tech_expert.models' is not a package"
      },
      {
        "file": "agents/tool-selection/fabric_integrator.py",
        "error": "No module named 'aiofiles'"
      },
      {
        "file": "agents/tool-selection/learning_engine.py",
        "error": "No module named 'agents.tool_selection'"
      },
      {
        "file": "agents/tool-selection/prompt_analyzer.py",
        "error": "No module named 'agents.tool_selection'"
      },
      {
        "file": "brain/modules/dashboard-visualizer.py",
        "error": "No module named 'matplotlib'"
      },
      {
        "file": "brain/modules/enhanced-repository-analyzer.py",
        "error": "No module named 'agents.structure_agent'"
      },
      {
        "file": "brain/modules/github-analyzer.py",
        "error": "No module named 'docker'"
      },
      {
        "file": "brain/modules/openrouter/__init__.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "brain/modules/openrouter/embeddings.py",
        "error": "No module named 'numpy'"
      },
      {
        "file": "brain/modules/openrouter/router_client.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "brain/modules/seamless-orchestrator.py",
        "error": "No module named 'brain.modules.unified_analytics'"
      },
      {
        "file": "ottomator-agents/TinyDM-agent/main.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/api.py",
        "error": "No module named 'uvicorn'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/db_utils.py",
        "error": "No module named 'asyncpg'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/graph_utils.py",
        "error": "No module named 'graphiti_core'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/providers.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/agent/tools.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/chunker.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/embedder.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/ingestion/ingest.py",
        "error": "No module named 'asyncpg'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_db_utils.py",
        "error": "No module named 'agent'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/agent/test_models.py",
        "error": "No module named 'agent'"
      },
      {
        "file": "ottomator-agents/agentic-rag-knowledge-graph/tests/ingestion/test_chunker.py",
        "error": "No module named 'ingestion.chunker'"
      },
      {
        "file": "ottomator-agents/ask-reddit-agent/ai_agent.py",
        "error": "No module named 'asyncpraw'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/1-crawl_single_page.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/2-crawl_docs_sequential.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/crawl4AI-examples/3-crawl_docs_FAST.py",
        "error": "No module named 'psutil'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/crawl_pydantic_ai_docs.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/pydantic_ai_expert.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/streamlit_ui.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/1-crawl_single_page.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/2-crawl_docs_sequential.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/3-crawl_sitemap_in_parallel.py",
        "error": "No module named 'psutil'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/4-crawl_llms_txt.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples/5-crawl_site_recursively.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/insert_docs.py",
        "error": "No module named 'crawl4ai'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/rag_agent.py",
        "error": "No module named 'chromadb'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/streamlit_app.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent-v2/utils.py",
        "error": "No module named 'chromadb'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/agent/__init__.py",
        "error": "No module named 'agent'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/agent/aai_rag_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/agent/agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/agent/tools.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/database/__init__.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/database/setup.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/database/setup_db.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/document_processing/__init__.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/document_processing/aai_ingestion_pipeline.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/document_processing/embeddings.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/document_processing/ingestion.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/document_processing/processors.py",
        "error": "No module named 'PyPDF2'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/streamlit_ui_example.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/test_aai_rag_system.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/tests/test_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/tests/test_agent_tools.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/tests/test_processors.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/ui/aai_streamlit_app.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/foundational-rag-agent/ui/app.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_agent_lib.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_postgres_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent_app.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_abstracts.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_aimlapi.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_groq.py",
        "error": "No module named 'groq'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_huggingface.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_nvidia.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_ollama.py",
        "error": "No module named 'ollama'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openai.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_openrouter.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_rhymes.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_together_ai.py",
        "error": "No module named 'together'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_provider_xai.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ai_utilities.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_abstracts.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_json.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_db_mongodb.py",
        "error": "No module named 'pymongo'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_general_lib.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_generation_lib.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_ideation_lib.py",
        "error": "No module named 'lib'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_llamaindex_abstraction.py",
        "error": "No module named 'llama_index'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_powerpoint.py",
        "error": "No module named 'pptx'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_schema_generator.py",
        "error": "No module named 'llama_index'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/lib/codegen_streamlit_lib.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/src/codegen_app_ideation.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/src/codegen_buttons.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/streamlit_app.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/google-a2a-agent/server.py",
        "error": "No module named 'flask'"
      },
      {
        "file": "ottomator-agents/graphiti-agent/agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/graphiti-agent/llm_evolution.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/graphiti-agent/quickstart.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/lead-generator-agent/leadgen_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/lead-generator-agent/studio_leadgen_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/BasicRAG/insert_pydantic_docs.py",
        "error": "No module named 'utils'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/BasicRAG/rag_agent.py",
        "error": "No module named 'chromadb'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/BasicRAG/streamlit_app.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/BasicRAG/utils.py",
        "error": "No module named 'chromadb'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/LightRAG/insert_pydantic_docs.py",
        "error": "No module named 'lightrag'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/LightRAG/rag_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/LightRAG/streamlit_app.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/light-rag-agent/LightRAG/super-basic-lightrag.py",
        "error": "No module named 'lightrag'"
      },
      {
        "file": "ottomator-agents/mcp-agent-army/basic-pydantic-mcp-agent/pydantic_mcp_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/mcp-agent-army/mcp_agent_army.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/mem0-agent/iterations/v1-basic-mem0.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/mem0-agent/iterations/v2-supabase-mem0.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/mem0-agent/iterations/v3-streamlit-supabase-mem0.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent.py",
        "error": "No module named 'logfire'"
      },
      {
        "file": "ottomator-agents/n8n-expert/ingest-n8n-workflows.py",
        "error": "No module named 'langchain_core'"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v6_streamlit_agent.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/ottomarkdown-agent/validation_test.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-advanced-researcher/streamlit_ui.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_agent.py",
        "error": "No module named 'logfire'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent.py",
        "error": "No module named 'logfire'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-advanced-researcher/web_search_agent_streamlit.py",
        "error": "No module named 'logfire'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langfuse/configure_langfuse.py",
        "error": "No module named 'opentelemetry'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langfuse/iterations/simple_langfuse.py",
        "error": "No module named 'langfuse'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langfuse/iterations/simple_pydantic_ai.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langfuse/pydantic_ai_langfuse_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agent_graph.py",
        "error": "No module named 'langgraph'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/activity_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/final_planner_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/flight_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/hotel_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/agents/info_gathering_agent.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-info-sync.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/cli-sync.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/flight-cli.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/extras/info_gathering_cli.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/streamlit_ui.py",
        "error": "No module named 'langgraph'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-langgraph-parallelization/utils.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/basic_mcp_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/experimental_mcp_client.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/non_mcp_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/extras/pydantic_mcp_streamlit.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/mcp_client.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/pydantic_mcp_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/mcp_client.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-github-agent/cli.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-github-agent/github_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/python-local-ai-agent/openai_compatible_demo.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/simple-mcp-agent/simple_mcp_agent_sse.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/simple-mcp-agent/simple_mcp_agent_stdio.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/agents/buzz_intern.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/agents/buzz_master.py",
        "error": "No module named 'constants'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/agents/orchestrator.py",
        "error": "No module named 'pydantic_ai'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/agents/responder.py",
        "error": "No module named 'constants'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/agents/stream_starter.py",
        "error": "No module named 'constants'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/constants/constants.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/models/youtube_models.py",
        "error": "No module named 'constants'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/routers/chat_worker.py",
        "error": "No module named 'agents.buzz_intern'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/streambuzz.py",
        "error": "No module named 'apscheduler'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/utils/intent_util.py",
        "error": "No module named 'constants'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/utils/rag_util.py",
        "error": "No module named 'google'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/utils/supabase_util.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/utils/youtube_util.py",
        "error": "No module named 'cachetools'"
      },
      {
        "file": "ottomator-agents/streambuzz-agent/youtube_credentials/get_youtube_tokens.py",
        "error": "No module named 'google_auth_oauthlib'"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/mcp_client.py",
        "error": "No module named 'exceptions'"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/__init__.py",
        "error": "No module named 'mcp.server'"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather/server.py",
        "error": "No module named 'mcp.server'"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_openai_client.example.py",
        "error": "No module named 'huggingface_hub'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/brave_api.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/crawler_utils.py",
        "error": "No module named 'bs4'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/openai_api.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/streamlit_app.py",
        "error": "No module named 'streamlit'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/test_openai_generation.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/test_twitter_post.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/twitter_auth.py",
        "error": "No module named 'tweepy'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/twitter_utils.py",
        "error": "No module named 'tweepy'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/voice_input.py",
        "error": "No module named 'speech_recognition'"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/voice_utils.py",
        "error": "No module named 'supabase_utils'"
      },
      {
        "file": "ottomator-agents/youtube-summary-agent/main.py",
        "error": "No module named 'googleapiclient'"
      },
      {
        "file": "ottomator-agents/~sample-python-agent~/sample_postgres_agent.py",
        "error": "No module named 'dotenv'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/agents/__init__.py",
        "error": "No module named 'agents.base_agent'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/agents/structure_agent.py",
        "error": "No module named 'agents.base_agent'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/api/__init__.py",
        "error": "No module named 'uvicorn'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/api/main.py",
        "error": "No module named 'uvicorn'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/collaborative/__init__.py",
        "error": "No module named 'test_module_2971404677243823967.workspace_manager'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/integrations/__init__.py",
        "error": "No module named 'backoff'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/integrations/openrouter_integration.py",
        "error": "No module named 'backoff'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/ml/__init__.py",
        "error": "No module named 'test_module_476234710954896751.predictive_models'"
      },
      {
        "file": "projects/enhanced-repository-analyzer/tests/test_performance.py",
        "error": "No module named 'psutil'"
      },
      {
        "file": "projects/legacy-github-analyzer/test_github_analyzer.py",
        "error": "No module named 'github_analyzer'"
      },
      {
        "file": "research/mcp/server.py",
        "error": "No module named 'uvicorn'"
      },
      {
        "file": "supabase/scripts/test_supabase_connection.py",
        "error": "No module named 'dotenv'"
      }
    ],
    "unknown_error": [
      {
        "file": "agents/tool-selection/__init__.py",
        "error": "expected an indented block after 'try' statement on line 294 (tool_selector.py, line 295)"
      },
      {
        "file": "agents/tool-selection/confidence_scorer.py",
        "error": "expected an indented block after 'try' statement on line 439 (<unknown>, line 440)"
      },
      {
        "file": "agents/tool-selection/tool_selector.py",
        "error": "expected an indented block after 'try' statement on line 294 (<unknown>, line 295)"
      },
      {
        "file": "brain/modules/smart-tool-selector.py",
        "error": "no running event loop"
      },
      {
        "file": "brain/modules/unified_enhancement_loader.py",
        "error": "no running event loop"
      },
      {
        "file": "brain/modules/unified_intelligence_coordinator.py",
        "error": "name 'AgentMessage' is not defined"
      },
      {
        "file": "core/agent_interoperability_framework.py",
        "error": "no running event loop"
      },
      {
        "file": "core/realtime_orchestration_monitor.py",
        "error": "no running event loop"
      },
      {
        "file": "projects/legacy-github-analyzer/comprehensive_analyzer_test.py",
        "error": "[Errno 2] No such file or directory: '/mnt/c/Users/Brandon/AAI/projects/github-analyzer/test_analysis.log'"
      }
    ],
    "relative_import_issue": [
      {
        "file": "brain/modules/openrouter/contradictions.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "enhancements/memory/command_enhancer.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "enhancements/memory/memory_layer.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "enhancements/memory/workflow_memory.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/base/installer.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/components/__init__.py",
        "error": "attempted relative import beyond top-level package"
      },
      {
        "file": "superclaude-v3/setup/components/commands.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/components/core.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/components/hooks.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/components/mcp.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/core/__init__.py",
        "error": "attempted relative import beyond top-level package"
      },
      {
        "file": "superclaude-v3/setup/core/registry.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/operations/backup.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/operations/install.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/operations/uninstall.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/operations/update.py",
        "error": "attempted relative import with no known parent package"
      },
      {
        "file": "superclaude-v3/setup/utils/logger.py",
        "error": "attempted relative import with no known parent package"
      }
    ],
    "missing_attribute": [
      {
        "file": "brain/modules/supabase-cache.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/TinyDM-agent/database.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/ask-reddit-agent/agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/crawl4AI-agent/studio-integration-version/pydantic_ai_expert_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/file-agent/file_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent/gsam_supabase_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/lead-generator-agent/leadgen_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/lead-generator-agent/studio_leadgen_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/mcp-agent-army/studio-integration-version/mcp_agent_army_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/mem0-agent/studio-integration-version/mem0_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/nba-agent/agent_trial/nba_agent_1.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/nba-agent/nba_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v1_basic_agent.py",
        "error": "cannot import name 'Agent' from 'agents' (unknown location)"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v2_structured_output.py",
        "error": "cannot import name 'Agent' from 'agents' (unknown location)"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v3_tool_calls.py",
        "error": "cannot import name 'Agent' from 'agents' (unknown location)"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v4_handoffs.py",
        "error": "cannot import name 'Agent' from 'agents' (unknown location)"
      },
      {
        "file": "ottomator-agents/openai-sdk-agent/v5_guardrails_and_context.py",
        "error": "cannot import name 'Agent' from 'agents' (unknown location)"
      },
      {
        "file": "ottomator-agents/ottomarkdown-agent/file_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version/web_search_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version/pydantic_mcp_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/pydantic-github-agent/github_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/pydantic-github-agent/studio-integration-version/github_agent_endpoint.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/python-local-ai-agent/main.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/thirdbrain_mcp_openai_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/thirdbrain-mcp-openai-agent/wip/mcp_proxy_pydantic_agent_client.example.py",
        "error": "cannot import name 'ClientSession' from 'mcp' (/mnt/c/Users/Brandon/AAI/mcp/__init__.py)"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/main.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/tweet-generator-agent/supabase_utils.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/~sample-python-agent~/sample_supabase_agent.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      },
      {
        "file": "ottomator-agents/~voiceflow-dialog-api-integration~/voiceflow_integration.py",
        "error": "cannot import name 'create_client' from 'supabase' (unknown location)"
      }
    ]
  },
  "missing_dependencies": [
    "crawl4ai",
    "github_analyzer",
    "pptx",
    "ingestion",
    "pymongo",
    "speech_recognition",
    "huggingface_hub",
    "streamlit",
    "backoff",
    "agents",
    "asyncpg",
    "utils",
    "test_module_2971404677243823967",
    "lib",
    "groq",
    "llama_index",
    "logfire",
    "langgraph",
    "flask",
    "langfuse",
    "graphiti_core",
    "apscheduler",
    "bs4",
    "opentelemetry",
    "supabase_utils",
    "agent",
    "pydantic_ai",
    "psutil",
    "lightrag",
    "matplotlib",
    "mcp",
    "constants",
    "cachetools",
    "brain",
    "ollama",
    "exceptions",
    "dotenv",
    "tweepy",
    "asyncpraw",
    "chromadb",
    "google_auth_oauthlib",
    "PyPDF2",
    "docker",
    "googleapiclient",
    "uvicorn",
    "langchain_core",
    "numpy",
    "together",
    "aiofiles",
    "test_module_476234710954896751",
    "google"
  ],
  "syntax_errors": {},
  "relative_import_issues": {},
  "circular_imports": {},
  "directory_stats": {
    ".claude/hooks": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    ".claude/implementations": {
      "total": 3,
      "success": 3,
      "failed": 0
    },
    "agents/orchestration": {
      "total": 4,
      "success": 3,
      "failed": 1
    },
    "agents/r1_reasoning": {
      "total": 6,
      "success": 3,
      "failed": 3
    },
    "agents/specialized": {
      "total": 5,
      "success": 4,
      "failed": 1
    },
    "agents/tech_expert": {
      "total": 4,
      "success": 3,
      "failed": 1
    },
    "agents/tool-selection": {
      "total": 7,
      "success": 1,
      "failed": 6
    },
    "api": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "brain": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "brain/docs": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "brain/logs/archives/superclaude-v2-backup-20250715/test-superclaude": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "brain/modules": {
      "total": 28,
      "success": 20,
      "failed": 8
    },
    "brain/modules/openrouter": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "core": {
      "total": 6,
      "success": 4,
      "failed": 2
    },
    "enhancements/memory": {
      "total": 5,
      "success": 2,
      "failed": 3
    },
    "examples/generated/from-tasks": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "fixes": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "github-analyzer-legacy/tools": {
      "total": 3,
      "success": 3,
      "failed": 0
    },
    "ideas": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    ".": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "inference": {
      "total": 4,
      "success": 4,
      "failed": 0
    },
    "ingestion/r1_reasoning": {
      "total": 4,
      "success": 4,
      "failed": 0
    },
    "interfaces": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "mcp": {
      "total": 3,
      "success": 3,
      "failed": 0
    },
    "n8n": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "ottomator-agents/TinyDM-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/agentic-rag-knowledge-graph/agent": {
      "total": 9,
      "success": 3,
      "failed": 6
    },
    "ottomator-agents/agentic-rag-knowledge-graph": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "ottomator-agents/agentic-rag-knowledge-graph/ingestion": {
      "total": 4,
      "success": 1,
      "failed": 3
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests/agent": {
      "total": 3,
      "success": 1,
      "failed": 2
    },
    "ottomator-agents/agentic-rag-knowledge-graph/tests/ingestion": {
      "total": 2,
      "success": 1,
      "failed": 1
    },
    "ottomator-agents/ask-reddit-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/crawl4AI-agent/crawl4AI-examples": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/crawl4AI-agent": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/crawl4AI-agent/studio-integration-version": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/crawl4AI-agent-v2/crawl4AI-examples": {
      "total": 5,
      "success": 0,
      "failed": 5
    },
    "ottomator-agents/crawl4AI-agent-v2": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/file-agent": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/foundational-rag-agent/agent": {
      "total": 5,
      "success": 1,
      "failed": 4
    },
    "ottomator-agents/foundational-rag-agent/database": {
      "total": 4,
      "success": 1,
      "failed": 3
    },
    "ottomator-agents/foundational-rag-agent/document_processing": {
      "total": 6,
      "success": 1,
      "failed": 5
    },
    "ottomator-agents/foundational-rag-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/foundational-rag-agent/tests": {
      "total": 4,
      "success": 1,
      "failed": 3
    },
    "ottomator-agents/foundational-rag-agent/ui": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/genericsuite-app-maker-agent": {
      "total": 3,
      "success": 1,
      "failed": 2
    },
    "ottomator-agents/genericsuite-app-maker-agent/gsam_ottomator_agent": {
      "total": 4,
      "success": 1,
      "failed": 3
    },
    "ottomator-agents/genericsuite-app-maker-agent/lib": {
      "total": 27,
      "success": 4,
      "failed": 23
    },
    "ottomator-agents/genericsuite-app-maker-agent/src": {
      "total": 3,
      "success": 1,
      "failed": 2
    },
    "ottomator-agents/google-a2a-agent": {
      "total": 2,
      "success": 1,
      "failed": 1
    },
    "ottomator-agents/graphiti-agent": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/lead-generator-agent": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/light-rag-agent/BasicRAG": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/light-rag-agent/LightRAG": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/mcp-agent-army/basic-pydantic-mcp-agent": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/mcp-agent-army": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/mcp-agent-army/studio-integration-version": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/mem0-agent/iterations": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/mem0-agent/studio-integration-version": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/n8n-expert": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/nba-agent/agent_trial": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/nba-agent": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/openai-sdk-agent": {
      "total": 6,
      "success": 0,
      "failed": 6
    },
    "ottomator-agents/ottomarkdown-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/pydantic-ai-advanced-researcher": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/pydantic-ai-advanced-researcher/studio-integration-version": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/pydantic-ai-langfuse": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/pydantic-ai-langfuse/iterations": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/agents": {
      "total": 5,
      "success": 0,
      "failed": 5
    },
    "ottomator-agents/pydantic-ai-langgraph-parallelization/extras": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/pydantic-ai-mcp-agent/extras": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/pydantic-ai-mcp-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/pydantic-ai-mcp-agent/studio-integration-version": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/pydantic-github-agent": {
      "total": 3,
      "success": 0,
      "failed": 3
    },
    "ottomator-agents/pydantic-github-agent/studio-integration-version": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/python-local-ai-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/simple-mcp-agent": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/streambuzz-agent/agents": {
      "total": 5,
      "success": 0,
      "failed": 5
    },
    "ottomator-agents/streambuzz-agent/constants": {
      "total": 3,
      "success": 2,
      "failed": 1
    },
    "ottomator-agents/streambuzz-agent/exceptions": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "ottomator-agents/streambuzz-agent": {
      "total": 2,
      "success": 1,
      "failed": 1
    },
    "ottomator-agents/streambuzz-agent/models": {
      "total": 2,
      "success": 1,
      "failed": 1
    },
    "ottomator-agents/streambuzz-agent/routers": {
      "total": 2,
      "success": 1,
      "failed": 1
    },
    "ottomator-agents/streambuzz-agent/utils": {
      "total": 4,
      "success": 0,
      "failed": 4
    },
    "ottomator-agents/streambuzz-agent/youtube_credentials": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent": {
      "total": 3,
      "success": 1,
      "failed": 2
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/weather-server-python/src/weather": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/thirdbrain-mcp-openai-agent/wip": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/tweet-generator-agent": {
      "total": 12,
      "success": 0,
      "failed": 12
    },
    "ottomator-agents/youtube-summary-agent": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "ottomator-agents/~sample-python-agent~": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "ottomator-agents/~voiceflow-dialog-api-integration~": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "projects/enhanced-repository-analyzer": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "projects/enhanced-repository-analyzer/agents": {
      "total": 3,
      "success": 1,
      "failed": 2
    },
    "projects/enhanced-repository-analyzer/api": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "projects/enhanced-repository-analyzer/collaborative": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "projects/enhanced-repository-analyzer/core": {
      "total": 5,
      "success": 5,
      "failed": 0
    },
    "projects/enhanced-repository-analyzer/integrations": {
      "total": 2,
      "success": 0,
      "failed": 2
    },
    "projects/enhanced-repository-analyzer/ml": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "projects/enhanced-repository-analyzer/tests": {
      "total": 3,
      "success": 2,
      "failed": 1
    },
    "projects/legacy-github-analyzer": {
      "total": 5,
      "success": 3,
      "failed": 2
    },
    "projects/test-superclaude": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "projects/test-superclaude-v3-integration": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "research/_map": {
      "total": 2,
      "success": 2,
      "failed": 0
    },
    "research/_semantic": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "research/mcp": {
      "total": 1,
      "success": 0,
      "failed": 1
    },
    "research/scripts": {
      "total": 6,
      "success": 6,
      "failed": 0
    },
    "scripts": {
      "total": 3,
      "success": 3,
      "failed": 0
    },
    "supabase/modules": {
      "total": 3,
      "success": 3,
      "failed": 0
    },
    "supabase/scripts": {
      "total": 7,
      "success": 6,
      "failed": 1
    },
    "superclaude-v3/SuperClaude/Hooks": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "superclaude-v3": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "superclaude-v3/setup": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "superclaude-v3/setup/base": {
      "total": 3,
      "success": 2,
      "failed": 1
    },
    "superclaude-v3/setup/components": {
      "total": 5,
      "success": 0,
      "failed": 5
    },
    "superclaude-v3/setup/core": {
      "total": 6,
      "success": 4,
      "failed": 2
    },
    "superclaude-v3/setup/operations": {
      "total": 5,
      "success": 1,
      "failed": 4
    },
    "superclaude-v3/setup/utils": {
      "total": 4,
      "success": 3,
      "failed": 1
    },
    "tests": {
      "total": 6,
      "success": 6,
      "failed": 0
    },
    "tests/enhancements/memory": {
      "total": 1,
      "success": 1,
      "failed": 0
    },
    "vector_store": {
      "total": 4,
      "success": 4,
      "failed": 0
    }
  }
}